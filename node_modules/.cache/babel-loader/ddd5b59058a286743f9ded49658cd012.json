{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/_partials/controls/pagination/PaginationToolbar.js\";\n\n/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { PaginationTotalStandalone } from \"react-bootstrap-table2-paginator\";\nexport function PaginationToolbar(props) {\n  const {\n    isLoading,\n    paginationProps\n  } = props;\n  const {\n    sizePerPageList,\n    sizePerPage,\n    totalSize,\n    onSizePerPageChange = [{\n      text: \"3\",\n      value: 3\n    }, {\n      text: \"5\",\n      value: 5\n    }, {\n      text: \"10\",\n      value: 10\n    }]\n  } = paginationProps;\n  const style = {\n    width: \"75px\"\n  };\n\n  const onSizeChange = event => {\n    const newSize = +event.target.value;\n    onSizePerPageChange(newSize);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center py-3\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-2 text-muted\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner spinner-primary mr-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      disabled: totalSize === 0,\n      className: `form-control form-control-sm font-weight-bold mr-4 border-0 bg-light ${totalSize === 0 && \"disabled\"}`,\n      onChange: onSizeChange,\n      value: sizePerPage,\n      style: style,\n      children: sizePerPageList.map(option => {\n        const isSelect = sizePerPage === `${option.page}`;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.page,\n          className: `btn ${isSelect ? \"active\" : \"\"}`,\n          children: option.text\n        }, option.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationTotalStandalone, {\n      className: \"text-muted\",\n      ...paginationProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = PaginationToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationToolbar\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/_partials/controls/pagination/PaginationToolbar.js"],"names":["React","PaginationTotalStandalone","PaginationToolbar","props","isLoading","paginationProps","sizePerPageList","sizePerPage","totalSize","onSizePerPageChange","text","value","style","width","onSizeChange","event","newSize","target","map","option","isSelect","page"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,yBAAR,QAAwC,kCAAxC;AAEA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCF,KAAvC;AACA,QAAM;AACJG,IAAAA,eADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,mBAAmB,GAAG,CACpB;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE;AAApB,KADoB,EAEpB;AAAED,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAFoB,EAGpB;AAAED,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAHoB;AAJlB,MASFN,eATJ;AAUA,QAAMO,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAE;AADK,GAAd;;AAIA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAMC,OAAO,GAAG,CAACD,KAAK,CAACE,MAAN,CAAaN,KAA9B;AACAF,IAAAA,mBAAmB,CAACO,OAAD,CAAnB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,eACGZ,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOE;AACE,MAAA,QAAQ,EAAEI,SAAS,KAAK,CAD1B;AAEE,MAAA,SAAS,EAAG,wEAAuEA,SAAS,KAC1F,CADiF,IAC5E,UAAW,EAHpB;AAIE,MAAA,QAAQ,EAAEM,YAJZ;AAKE,MAAA,KAAK,EAAEP,WALT;AAME,MAAA,KAAK,EAAEK,KANT;AAAA,gBAQGN,eAAe,CAACY,GAAhB,CAAoBC,MAAM,IAAI;AAC7B,cAAMC,QAAQ,GAAGb,WAAW,KAAM,GAAEY,MAAM,CAACE,IAAK,EAAhD;AACA,4BACE;AAEE,UAAA,KAAK,EAAEF,MAAM,CAACE,IAFhB;AAGE,UAAA,SAAS,EAAG,OAAMD,QAAQ,GAAG,QAAH,GAAc,EAAG,EAH7C;AAAA,oBAKGD,MAAM,CAACT;AALV,WACOS,MAAM,CAACT,IADd;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAXA;AARH;AAAA;AAAA;AAAA;AAAA,YAPF,eA4BE,QAAC,yBAAD;AAA2B,MAAA,SAAS,EAAC,YAArC;AAAA,SAAsDL;AAAtD;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;KArDeH,iB","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {PaginationTotalStandalone} from \"react-bootstrap-table2-paginator\";\r\n\r\nexport function PaginationToolbar(props) {\r\n  const { isLoading, paginationProps } = props;\r\n  const {\r\n    sizePerPageList,\r\n    sizePerPage,\r\n    totalSize,\r\n    onSizePerPageChange = [\r\n      { text: \"3\", value: 3 },\r\n      { text: \"5\", value: 5 },\r\n      { text: \"10\", value: 10 }\r\n    ]\r\n  } = paginationProps;\r\n  const style = {\r\n    width: \"75px\"\r\n  };\r\n\r\n  const onSizeChange = event => {\r\n    const newSize = +event.target.value;\r\n    onSizePerPageChange(newSize);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center py-3\">\r\n      {isLoading && (\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"mr-2 text-muted\">Loading...</div>\r\n          <div className=\"spinner spinner-primary mr-10\"></div>\r\n        </div>\r\n      )}\r\n      <select\r\n        disabled={totalSize === 0}\r\n        className={`form-control form-control-sm font-weight-bold mr-4 border-0 bg-light ${totalSize ===\r\n          0 && \"disabled\"}`}\r\n        onChange={onSizeChange}\r\n        value={sizePerPage}\r\n        style={style}\r\n      >\r\n        {sizePerPageList.map(option => {\r\n          const isSelect = sizePerPage === `${option.page}`;\r\n          return (\r\n            <option\r\n              key={option.text}\r\n              value={option.page}\r\n              className={`btn ${isSelect ? \"active\" : \"\"}`}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <PaginationTotalStandalone className=\"text-muted\" {...paginationProps} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}