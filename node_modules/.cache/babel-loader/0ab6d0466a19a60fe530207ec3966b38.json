{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/ProductsCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { Card, CardBody, CardHeader, CardHeaderToolbar } from \"../../../../../_metronic/_partials/controls\";\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\nimport { ProductsTable } from \"./products-table/ProductsTable\";\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\nimport { useProductsUIContext } from \"./ProductsUIContext\";\nexport function ProductsCard() {\n  _s();\n\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      newProductButtonClick: productsUIContext.newProductButtonClick,\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openUpdateProductsStatusDialog: productsUIContext.openUpdateProductsStatusDialog,\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog\n    };\n  }, [productsUIContext]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Products list\",\n      children: /*#__PURE__*/_jsxDEV(CardHeaderToolbar, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: productsUIProps.newProductButtonClick,\n          children: \"\\u0428\\u0438\\u043D\\u044D \\u0431\\u04AF\\u0442\\u044D\\u044D\\u0433\\u0434\\u044D\\u0445\\u04AF\\u04AF\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(ProductsFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), productsUIProps.ids.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ProductsGrouping, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(ProductsTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsCard, \"nNbaaOKYDM1A4OeCtfs4MYbq34o=\", false, function () {\n  return [useProductsUIContext];\n});\n\n_c = ProductsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsCard\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/ProductsCard.tsx"],"names":["React","useMemo","Card","CardBody","CardHeader","CardHeaderToolbar","ProductsFilter","ProductsTable","ProductsGrouping","useProductsUIContext","ProductsCard","productsUIContext","productsUIProps","ids","queryParams","setQueryParams","newProductButtonClick","openDeleteProductsDialog","openEditProductPage","openUpdateProductsStatusDialog","openFetchProductsDialog","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,iBAJF,QAKO,6CALP;AAMA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,SAASC,oBAAT,QAAqC,qBAArC;AAEA,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAC7B,QAAMC,iBAAiB,GAAGF,oBAAoB,EAA9C;AACA,QAAMG,eAAe,GAAGX,OAAO,CAAC,MAAM;AACpC,WAAO;AACLY,MAAAA,GAAG,EAAEF,iBAAiB,CAACE,GADlB;AAELC,MAAAA,WAAW,EAAEH,iBAAiB,CAACG,WAF1B;AAGLC,MAAAA,cAAc,EAAEJ,iBAAiB,CAACI,cAH7B;AAILC,MAAAA,qBAAqB,EAAEL,iBAAiB,CAACK,qBAJpC;AAKLC,MAAAA,wBAAwB,EAAEN,iBAAiB,CAACM,wBALvC;AAMLC,MAAAA,mBAAmB,EAAEP,iBAAiB,CAACO,mBANlC;AAOLC,MAAAA,8BAA8B,EAC5BR,iBAAiB,CAACQ,8BARf;AASLC,MAAAA,uBAAuB,EAAET,iBAAiB,CAACS;AATtC,KAAP;AAWD,GAZ8B,EAY5B,CAACT,iBAAD,CAZ4B,CAA/B;AAcA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,eAAlB;AAAA,6BACE,QAAC,iBAAD;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,iBAFZ;AAGE,UAAA,OAAO,EAAEC,eAAe,CAACI,qBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,QAAD;AAAA,8BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,eAAe,CAACC,GAAhB,CAAoBQ,MAApB,GAA6B,CAA7B,iBACC;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF,uBAHJ,eAOE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAxCeX,Y;UACYD,oB;;;KADZC,Y","sourcesContent":["import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsCard() {\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            Шинэ бүтээгдэхүүн\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}