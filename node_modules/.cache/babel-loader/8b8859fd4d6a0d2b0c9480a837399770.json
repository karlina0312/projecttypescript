{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\nexport function SpecificationsLoadingDialog() {\n  _s();\n\n  const {\n    isLoading\n  } = useSelector(state => ({\n    isLoading: state.specifications.listLoading\n  }), shallowEqual);\n  useEffect(() => {}, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(LoadingDialog, {\n    isLoading: isLoading,\n    text: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SpecificationsLoadingDialog, \"MnhoQFkr59sqRaEkO+CY7cxR11k=\", false, function () {\n  return [useSelector];\n});\n\n_c = SpecificationsLoadingDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificationsLoadingDialog\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.tsx"],"names":["React","useEffect","shallowEqual","useSelector","LoadingDialog","SpecificationsLoadingDialog","isLoading","state","specifications","listLoading"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,aAAT,QAA8B,gDAA9B;AAEA,OAAO,SAASC,2BAAT,GAAuC;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,WAAW,CAC9BI,KAAD,KAAY;AAAED,IAAAA,SAAS,EAAEC,KAAK,CAACC,cAAN,CAAqBC;AAAlC,GAAZ,CAD+B,EAE/BP,YAF+B,CAAjC;AAIAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACK,SAAD,CAAX,CAAT;AACA,sBAAO,QAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAqC,IAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAPeD,2B;UACQF,W;;;KADRE,2B","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}