{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/products-table/ProductsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport * as uiHelpers from \"../ProductsUIHelpers\";\nimport { getSelectRow, getHandlerTableChange, NoRecordsFoundMessage, PleaseWaitMessage, sortCaret } from \"../../../../../../_metronic/_helpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\nexport function ProductsTable() {\n  _s();\n\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog\n    };\n  }, [productsUIContext]); // Getting curret state of products list from store (Redux)\n\n  const {\n    currentState\n  } = useSelector(state => ({\n    currentState: state.products\n  }), shallowEqual);\n  const {\n    totalCount,\n    entities,\n    listLoading\n  } = currentState; // Products Redux state\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // clear selections list\n    productsUIProps.setIds([]); // server call by queryParams\n\n    dispatch(actions.fetchProducts(productsUIProps.queryParams)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.queryParams, dispatch]); // Table columns\n\n  const columns = [{\n    dataField: \"VINCode\",\n    text: \"VIN Code (ID)\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"manufacture\",\n    text: \"Manufacture\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"model\",\n    text: \"Model\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"modelYear\",\n    text: \"Model Year\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"color\",\n    text: \"Color\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.ColorColumnFormatter\n  }, {\n    dataField: \"price\",\n    text: \"Price\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.PriceColumnFormatter\n  }, {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.StatusColumnFormatter\n  }, {\n    dataField: \"condition\",\n    text: \"Condition\",\n    sort: true,\n    sortCaret: sortCaret,\n    formatter: columnFormatters.ConditionColumnFormatter\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: columnFormatters.ActionsColumnFormatter,\n    formatExtraData: {\n      openEditProductPage: productsUIProps.openEditProductPage,\n      openDeleteProductDialog: productsUIProps.openDeleteProductDialog\n    },\n    classes: \"text-right pr-0\",\n    headerClasses: \"text-right pr-3\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }]; // Table pagination properties\n\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: productsUIProps.queryParams.pageSize,\n    page: productsUIProps.queryParams.pageNumber\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PaginationProvider, {\n      pagination: paginationFactory(paginationOptions),\n      children: ({\n        paginationProps,\n        paginationTableProps\n      }) => {\n        return /*#__PURE__*/_jsxDEV(Pagination, {\n          isLoading: listLoading,\n          paginationProps: paginationProps,\n          children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n            wrapperClasses: \"table-responsive\",\n            classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n            bootstrap4: true,\n            bordered: false,\n            remote: true,\n            keyField: \"id\",\n            data: entities === null ? [] : entities,\n            columns: columns,\n            defaultSorted: uiHelpers.defaultSorted,\n            onTableChange: getHandlerTableChange(productsUIProps.setQueryParams),\n            selectRow: getSelectRow({\n              entities,\n              ids: productsUIProps.ids,\n              setIds: productsUIProps.setIds\n            }),\n            ...paginationTableProps,\n            children: [/*#__PURE__*/_jsxDEV(PleaseWaitMessage, {\n              entities: entities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NoRecordsFoundMessage, {\n              entities: entities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProductsTable, \"7iCWE0RkaKj4sX9p5ScCtZlwMP0=\", false, function () {\n  return [useProductsUIContext, useSelector, useDispatch];\n});\n\n_c = ProductsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsTable\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/products-table/ProductsTable.tsx"],"names":["React","useEffect","useMemo","BootstrapTable","paginationFactory","PaginationProvider","shallowEqual","useDispatch","useSelector","actions","uiHelpers","getSelectRow","getHandlerTableChange","NoRecordsFoundMessage","PleaseWaitMessage","sortCaret","columnFormatters","Pagination","useProductsUIContext","ProductsTable","productsUIContext","productsUIProps","ids","setIds","queryParams","setQueryParams","openEditProductPage","openDeleteProductDialog","currentState","state","products","totalCount","entities","listLoading","dispatch","fetchProducts","columns","dataField","text","sort","formatter","ColorColumnFormatter","PriceColumnFormatter","StatusColumnFormatter","ConditionColumnFormatter","ActionsColumnFormatter","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","sizePerPageList","sizePerPage","pageSize","page","pageNumber","paginationProps","paginationTableProps","defaultSorted"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"VINCode\",\r\n      text: \"VIN Code (ID)\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"manufacture\",\r\n      text: \"Manufacture\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"model\",\r\n      text: \"Model\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"modelYear\",\r\n      text: \"Model Year\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"color\",\r\n      text: \"Color\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ColorColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.PriceColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}