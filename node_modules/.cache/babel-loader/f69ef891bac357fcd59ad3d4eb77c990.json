{"ast":null,"code":"export default function setupAxios(axios, store) {\n  axios.interceptors.request.use(config => {\n    const {\n      auth: {\n        authToken\n      }\n    } = store.getState();\n\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n\n    return config;\n  }, err => Promise.reject(err));\n}","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/redux/setupAxios.tsx"],"names":["setupAxios","axios","store","interceptors","request","use","config","auth","authToken","getState","headers","Authorization","err","Promise","reject"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,KAApB,EAA+BC,KAA/B,EAA0C;AACvDD,EAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACOC,MAAL,IAA0D;AACxD,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEFN,KAAK,CAACO,QAAN,EAFJ;;AAIA,QAAID,SAAJ,EAAe;AACbF,MAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASH,SAAU,EAAnD;AACD;;AAED,WAAOF,MAAP;AACD,GAXH,EAYOM,GAAL,IAAkBC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAZpB;AAcD","sourcesContent":["export default function setupAxios(axios:any, store:any) {\r\n  axios.interceptors.request.use(\r\n    (    config: { headers: { Authorization: string; }; }) => {\r\n      const {\r\n        auth: { authToken }\r\n      } = store.getState();\r\n\r\n      if (authToken) {\r\n        config.headers.Authorization = `Bearer ${authToken}`;\r\n      }\r\n\r\n      return config;\r\n    },\r\n    (    err: any) => Promise.reject(err)\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}