{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/_partials/controls/AnimateLoading.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProgressBar } from \"react-bootstrap\"; // TODO: Should be rewrited to pure function\n\nclass AnimateLoading extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: 0,\n      routeChanged: false\n    };\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props.location.pathname !== nextProps.location.pathname) {\n      this.animate();\n      this.scrollToTop();\n    }\n  }\n\n  scrollToTop() {\n    const scrollToTopBtn = document.getElementById(\"kt_scrolltop\");\n\n    if (scrollToTopBtn) {\n      scrollToTopBtn.click();\n    }\n  }\n\n  animate() {\n    this.animateTimeout = setTimeout(() => {\n      if (this.state.width <= 100) {\n        this.setState({\n          width: this.state.width + 10\n        });\n        this.animate();\n      } else {\n        this.stopAnimate();\n      }\n    }, 30);\n  }\n\n  stopAnimate() {\n    clearTimeout(this.animateInterval);\n    this.stopAnimateTimeout = setTimeout(() => {\n      this.setState({\n        width: 0\n      });\n    }, 300);\n  }\n\n  componentWillUnmount() {\n    if (this.stopAnimateTimeout) {\n      clearTimeout(this.stopAnimateTimeout);\n    }\n\n    if (this.animateTimeout) {\n      clearTimeout(this.animateTimeout);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-progress-bar\",\n      style: {\n        height: \"3px\",\n        width: \"100%\"\n      },\n      children: this.state.width > 0 && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        variant: \"info\",\n        now: this.state.width,\n        style: {\n          height: \"3px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(AnimateLoading);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/_partials/controls/AnimateLoading.js"],"names":["React","withRouter","ProgressBar","AnimateLoading","Component","state","width","routeChanged","componentDidUpdate","nextProps","props","location","pathname","animate","scrollToTop","scrollToTopBtn","document","getElementById","click","animateTimeout","setTimeout","setState","stopAnimate","clearTimeout","animateInterval","stopAnimateTimeout","componentWillUnmount","render","height"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,iBAA1B,C,CAEA;;AACA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAG3CC,KAH2C,GAGnC;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,YAAY,EAAE;AAFR,KAHmC;AAAA;;AAQ3CC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,KAAiCH,SAAS,CAACE,QAAV,CAAmBC,QAAxD,EAAkE;AAChE,WAAKC,OAAL;AACA,WAAKC,WAAL;AACD;AACF;;AAEDA,EAAAA,WAAW,GAAG;AACZ,UAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAvB;;AACA,QAAIF,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACG,KAAf;AACD;AACF;;AAEDL,EAAAA,OAAO,GAAG;AACR,SAAKM,cAAL,GAAsBC,UAAU,CAAC,MAAM;AACrC,UAAI,KAAKf,KAAL,CAAWC,KAAX,IAAoB,GAAxB,EAA6B;AAC3B,aAAKe,QAAL,CAAc;AAAEf,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,SAAd;AACA,aAAKO,OAAL;AACD,OAHD,MAGO;AACL,aAAKS,WAAL;AACD;AACF,KAP+B,EAO7B,EAP6B,CAAhC;AAQD;;AACDA,EAAAA,WAAW,GAAG;AACZC,IAAAA,YAAY,CAAC,KAAKC,eAAN,CAAZ;AACA,SAAKC,kBAAL,GAA0BL,UAAU,CAAC,MAAM;AACzC,WAAKC,QAAL,CAAc;AAAEf,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFmC,EAEjC,GAFiC,CAApC;AAGD;;AACDoB,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKD,kBAAT,EAA6B;AAC3BF,MAAAA,YAAY,CAAC,KAAKE,kBAAN,CAAZ;AACD;;AACD,QAAI,KAAKN,cAAT,EAAyB;AACvBI,MAAAA,YAAY,CAAC,KAAKJ,cAAN,CAAZ;AACD;AACF;;AACDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBtB,QAAAA,KAAK,EAAE;AAAxB,OAFT;AAAA,gBAIG,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAnB,iBACC,QAAC,WAAD;AAAa,QAAA,OAAO,EAAC,MAArB;AAA4B,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,KAA5C;AAAmD,QAAA,KAAK,EAAE;AAAEsB,UAAAA,MAAM,EAAE;AAAV;AAA1D;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAzD0C;;AA4D7C,oBAAe3B,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {ProgressBar} from \"react-bootstrap\";\r\n\r\n// TODO: Should be rewrited to pure function\r\nclass AnimateLoading extends React.Component {\r\n  animateTimeout;\r\n  stopAnimateTimeout;\r\n  state = {\r\n    width: 0,\r\n    routeChanged: false\r\n  };\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.location.pathname !== nextProps.location.pathname) {\r\n      this.animate();\r\n      this.scrollToTop();\r\n    }\r\n  }\r\n\r\n  scrollToTop() {\r\n    const scrollToTopBtn = document.getElementById(\"kt_scrolltop\");\r\n    if (scrollToTopBtn) {\r\n      scrollToTopBtn.click();\r\n    }\r\n  }\r\n\r\n  animate() {\r\n    this.animateTimeout = setTimeout(() => {\r\n      if (this.state.width <= 100) {\r\n        this.setState({ width: this.state.width + 10 });\r\n        this.animate();\r\n      } else {\r\n        this.stopAnimate();\r\n      }\r\n    }, 30);\r\n  }\r\n  stopAnimate() {\r\n    clearTimeout(this.animateInterval);\r\n    this.stopAnimateTimeout = setTimeout(() => {\r\n      this.setState({ width: 0 });\r\n    }, 300);\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.stopAnimateTimeout) {\r\n      clearTimeout(this.stopAnimateTimeout);\r\n    }\r\n    if (this.animateTimeout) {\r\n      clearTimeout(this.animateTimeout);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"header-progress-bar\"\r\n        style={{ height: \"3px\", width: \"100%\" }}\r\n      >\r\n        {this.state.width > 0 && (\r\n          <ProgressBar variant=\"info\" now={this.state.width} style={{ height: \"3px\" }}  />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AnimateLoading);\r\n"]},"metadata":{},"sourceType":"module"}