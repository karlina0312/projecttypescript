{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/Auth/pages/ForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { injectIntl } from \"react-intl\";\nimport * as auth from \"../_redux/authRedux\";\nimport { requestPassword } from \"../_redux/authCrud\";\nconst initialValues = {\n  email: \"\"\n};\n\nfunction ForgotPassword(props) {\n  _s();\n\n  const {\n    intl\n  } = props;\n  const [isRequested, setIsRequested] = useState(false);\n  const ForgotPasswordSchema = Yup.object().shape({\n    email: Yup.string().email(\"Wrong email format\").min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\").required(intl.formatMessage({\n      id: \"AUTH.VALIDATION.REQUIRED_FIELD\"\n    }))\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: ForgotPasswordSchema,\n    onSubmit: (values, {\n      setStatus,\n      setSubmitting\n    }) => {\n      requestPassword(values.email).then(() => setIsRequested(true)).catch(() => {\n        setIsRequested(false);\n        setSubmitting(false);\n        setStatus(intl.formatMessage({\n          id: \"AUTH.VALIDATION.NOT_FOUND\"\n        }, {\n          name: values.email\n        }));\n      });\n    }\n  });\n\n  const getInputClasses = fieldname => {\n    // if (formik.touched[fieldname] && formik.errors[fieldname]) {\n    //   return \"is-invalid\";\n    // }\n    // if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n    //   return \"is-valid\";\n    // }\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isRequested && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/auth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), !isRequested && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form login-forgot\",\n      style: {\n        display: \"block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-10 mb-lg-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-size-h1\",\n          children: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433\\u044D\\u044D \\u043C\\u0430\\u0440\\u0442\\u0441\\u0430\\u043D \\u0443\\u0443?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-muted font-weight-bold\",\n          children: \"\\u0415\\u043C\\u0430\\u0439\\u043B \\u0445\\u0430\\u044F\\u0433\\u0430\\u0430 \\u043E\\u0440\\u0443\\u0443\\u043B\\u0430\\u043D \\u043D\\u0443\\u0443\\u0446 \\u04AF\\u0433\\u044D\\u044D \\u0441\\u044D\\u0440\\u0433\\u044D\\u044D\\u0433\\u044D\\u044D\\u0440\\u044D\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"form fv-plugins-bootstrap fv-plugins-framework animated animate__animated animate__backInUp\",\n        children: [formik.status && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-10 alert alert-custom alert-light-danger alert-dismissible\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-text font-weight-bold\",\n            children: formik.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group fv-plugins-icon-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: `form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\"email\")}`,\n            name: \"email\",\n            ...formik.getFieldProps(\"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fv-plugins-message-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fv-help-block\",\n              children: formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-wrap flex-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"kt_login_forgot_submit\",\n            type: \"submit\",\n            className: \"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\",\n            disabled: formik.isSubmitting,\n            children: \"\\u0417\\u04E9\\u0432\\u0448\\u04E9\\u04E9\\u0440\\u04E9\\u0445\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/auth\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"kt_login_forgot_cancel\",\n              className: \"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\",\n              children: \"\\u0426\\u0443\\u0446\\u043B\\u0430\\u0445\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForgotPassword, \"cWhG6q6YiBim/fipRKcMrrM3vlY=\", false, function () {\n  return [useFormik];\n});\n\n_c = ForgotPassword;\nexport default injectIntl(connect(null, auth.actions)(ForgotPassword));\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/Auth/pages/ForgotPassword.tsx"],"names":["React","useState","useFormik","connect","Link","Redirect","Yup","injectIntl","auth","requestPassword","initialValues","email","ForgotPassword","props","intl","isRequested","setIsRequested","ForgotPasswordSchema","object","shape","string","min","max","required","formatMessage","id","formik","validationSchema","onSubmit","values","setStatus","setSubmitting","then","catch","name","getInputClasses","fieldname","display","handleSubmit","status","getFieldProps","touched","errors","isSubmitting","actions"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport * as auth from \"../_redux/authRedux\";\r\nimport { requestPassword } from \"../_redux/authCrud\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n};\r\n\r\nfunction ForgotPassword(props: { intl: any; }): JSX.Element {\r\n  const { intl } = props;\r\n  const [isRequested, setIsRequested] = useState(false);\r\n  const ForgotPasswordSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"AUTH.VALIDATION.REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: ForgotPasswordSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      requestPassword(values.email)\r\n        .then(() => setIsRequested(true))\r\n        .catch(() => {\r\n          setIsRequested(false);\r\n          setSubmitting(false);\r\n          setStatus(\r\n            intl.formatMessage(\r\n              { id: \"AUTH.VALIDATION.NOT_FOUND\" },\r\n              { name: values.email }\r\n            )\r\n          );\r\n        });\r\n    },\r\n  });\r\n\r\n  const getInputClasses = (fieldname:any) => {\r\n    // if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n    //   return \"is-invalid\";\r\n    // }\r\n\r\n    // if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n    //   return \"is-valid\";\r\n    // }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isRequested && <Redirect to=\"/auth\" />}\r\n      {!isRequested && (\r\n        <div className=\"login-form login-forgot\" style={{ display: \"block\" }}>\r\n          <div className=\"text-center mb-10 mb-lg-20\">\r\n            <h3 className=\"font-size-h1\">Нууц үгээ мартсан уу?</h3>\r\n            <div className=\"text-muted font-weight-bold\">\r\n              Емайл хаягаа оруулан нууц үгээ сэргээгээрэй\r\n            </div>\r\n          </div>\r\n          <form\r\n            onSubmit={formik.handleSubmit}\r\n            className=\"form fv-plugins-bootstrap fv-plugins-framework animated animate__animated animate__backInUp\"\r\n          >\r\n            {formik.status && (\r\n              <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                <div className=\"alert-text font-weight-bold\">\r\n                  {formik.status}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group fv-plugins-icon-container\">\r\n              <input\r\n                type=\"email\"\r\n                className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\r\n                  \"email\"\r\n                )}`}\r\n                name=\"email\"\r\n                {...formik.getFieldProps(\"email\")}\r\n              />\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"fv-plugins-message-container\">\r\n                  <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group d-flex flex-wrap flex-center\">\r\n              <button\r\n                id=\"kt_login_forgot_submit\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n                disabled={formik.isSubmitting}\r\n              >\r\n                Зөвшөөрөх\r\n              </button>\r\n              <Link to=\"/auth\">\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"kt_login_forgot_cancel\"\r\n                  className=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n                >\r\n                  Цуцлах\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ForgotPassword));\r\n"]},"metadata":{},"sourceType":"module"}