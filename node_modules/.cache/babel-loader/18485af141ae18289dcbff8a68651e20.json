{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/layout/_core/MetronicLayout.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useMemo } from \"react\";\nimport { getInitLayoutConfig } from \"./LayoutConfig\";\nimport { HtmlClassService } from \"./HTMLClassService\";\nconst LAYOUT_CONFIG_KEY = process.env.REACT_APP_LAYOUT_CONFIG_KEY || \"LayoutConfig\";\n\nfunction getConfig() {\n  const ls = localStorage.getItem(LAYOUT_CONFIG_KEY);\n\n  if (ls) {\n    try {\n      return JSON.parse(ls);\n    } catch (er) {\n      console.error(er);\n    }\n  }\n\n  return getInitLayoutConfig();\n} // Side effect\n\n\nexport function setLayoutConfig(config) {\n  localStorage.setItem(LAYOUT_CONFIG_KEY, JSON.stringify(config));\n  window.location.reload();\n}\nconst HtmlClassServiceContext = /*#__PURE__*/createContext();\n/**\r\n *\r\n *\r\n * @export\r\n * @returns Layout context from 'localStorage'\r\n */\n\nexport function useHtmlClassService() {\n  _s();\n\n  return useContext(HtmlClassServiceContext);\n}\n\n_s(useHtmlClassService, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function withHtmlClassService(Component) {\n  class WithHtmlClassService extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props,\n        htmlClassService: this.context\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    }\n\n  }\n\n  WithHtmlClassService.displayName = `WithHtmlClassService(${Component.displayName || Component.name})`;\n  WithHtmlClassService.contextType = HtmlClassServiceContext;\n  return WithHtmlClassService;\n}\nexport const HtmlClassServiceConsumer = HtmlClassServiceContext.Consumer;\nexport function MetronicLayoutProvider({\n  children\n}) {\n  _s2();\n\n  const lc = useMemo(getConfig, []);\n  const hcs = useMemo(() => {\n    const service = new HtmlClassService();\n    service.setConfig(lc);\n    return service;\n  }, [lc]);\n  return /*#__PURE__*/_jsxDEV(HtmlClassServiceContext.Provider, {\n    value: hcs,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MetronicLayoutProvider, \"HEg4Sg8bKKIRUR6i+mBhE6ER1Ws=\");\n\n_c = MetronicLayoutProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetronicLayoutProvider\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/layout/_core/MetronicLayout.js"],"names":["React","createContext","useContext","useMemo","getInitLayoutConfig","HtmlClassService","LAYOUT_CONFIG_KEY","process","env","REACT_APP_LAYOUT_CONFIG_KEY","getConfig","ls","localStorage","getItem","JSON","parse","er","console","error","setLayoutConfig","config","setItem","stringify","window","location","reload","HtmlClassServiceContext","useHtmlClassService","withHtmlClassService","Component","WithHtmlClassService","render","props","context","displayName","name","contextType","HtmlClassServiceConsumer","Consumer","MetronicLayoutProvider","children","lc","hcs","service","setConfig"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,MAAMC,iBAAiB,GACrBC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,IAA2C,cAD7C;;AAGA,SAASC,SAAT,GAAqB;AACnB,QAAMC,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqBP,iBAArB,CAAX;;AACA,MAAIK,EAAJ,EAAQ;AACN,QAAI;AACF,aAAOG,IAAI,CAACC,KAAL,CAAWJ,EAAX,CAAP;AACD,KAFD,CAEE,OAAOK,EAAP,EAAW;AACXC,MAAAA,OAAO,CAACC,KAAR,CAAcF,EAAd;AACD;AACF;;AACD,SAAOZ,mBAAmB,EAA1B;AACD,C,CAED;;;AACA,OAAO,SAASe,eAAT,CAAyBC,MAAzB,EAAiC;AACtCR,EAAAA,YAAY,CAACS,OAAb,CAAqBf,iBAArB,EAAwCQ,IAAI,CAACQ,SAAL,CAAeF,MAAf,CAAxC;AACAG,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AAED,MAAMC,uBAAuB,gBAAGzB,aAAa,EAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS0B,mBAAT,GAA+B;AAAA;;AACpC,SAAOzB,UAAU,CAACwB,uBAAD,CAAjB;AACD;;GAFeC,mB;;AAIhB,OAAO,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;AAC9C,QAAMC,oBAAN,SAAmC9B,KAAK,CAAC6B,SAAzC,CAAmD;AAMjDE,IAAAA,MAAM,GAAG;AACP,0BAAO,QAAC,SAAD,OAAe,KAAKC,KAApB;AAA2B,QAAA,gBAAgB,EAAE,KAAKC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AARgD;;AAA7CH,EAAAA,oBADwC,CAErCI,WAFqC,GAEtB,wBAAuBL,SAAS,CAACK,WAAV,IAC3CL,SAAS,CAACM,IAAK,GAH2B;AACxCL,EAAAA,oBADwC,CAKrCM,WALqC,GAKvBV,uBALuB;AAY9C,SAAOI,oBAAP;AACD;AAED,OAAO,MAAMO,wBAAwB,GAAGX,uBAAuB,CAACY,QAAzD;AAEP,OAAO,SAASC,sBAAT,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA8C;AAAA;;AACnD,QAAMC,EAAE,GAAGtC,OAAO,CAACO,SAAD,EAAY,EAAZ,CAAlB;AACA,QAAMgC,GAAG,GAAGvC,OAAO,CAAC,MAAM;AACxB,UAAMwC,OAAO,GAAG,IAAItC,gBAAJ,EAAhB;AAEAsC,IAAAA,OAAO,CAACC,SAAR,CAAkBH,EAAlB;AAEA,WAAOE,OAAP;AACD,GANkB,EAMhB,CAACF,EAAD,CANgB,CAAnB;AAQA,sBACE,QAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEC,GAAzC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAfeD,sB;;KAAAA,sB","sourcesContent":["import React, { createContext, useContext, useMemo } from \"react\";\r\nimport { getInitLayoutConfig } from \"./LayoutConfig\";\r\nimport { HtmlClassService } from \"./HTMLClassService\";\r\n\r\nconst LAYOUT_CONFIG_KEY =\r\n  process.env.REACT_APP_LAYOUT_CONFIG_KEY || \"LayoutConfig\";\r\n\r\nfunction getConfig() {\r\n  const ls = localStorage.getItem(LAYOUT_CONFIG_KEY);\r\n  if (ls) {\r\n    try {\r\n      return JSON.parse(ls);\r\n    } catch (er) {\r\n      console.error(er);\r\n    }\r\n  }\r\n  return getInitLayoutConfig();\r\n}\r\n\r\n// Side effect\r\nexport function setLayoutConfig(config) {\r\n  localStorage.setItem(LAYOUT_CONFIG_KEY, JSON.stringify(config));\r\n  window.location.reload();\r\n}\r\n\r\nconst HtmlClassServiceContext = createContext();\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @returns Layout context from 'localStorage'\r\n */\r\nexport function useHtmlClassService() {\r\n  return useContext(HtmlClassServiceContext);\r\n}\r\n\r\nexport function withHtmlClassService(Component) {\r\n  class WithHtmlClassService extends React.Component {\r\n    static displayName = `WithHtmlClassService(${Component.displayName ||\r\n      Component.name})`;\r\n\r\n    static contextType = HtmlClassServiceContext;\r\n\r\n    render() {\r\n      return <Component {...this.props} htmlClassService={this.context} />;\r\n    }\r\n  }\r\n\r\n  return WithHtmlClassService;\r\n}\r\n\r\nexport const HtmlClassServiceConsumer = HtmlClassServiceContext.Consumer;\r\n\r\nexport function MetronicLayoutProvider({ children }) {\r\n  const lc = useMemo(getConfig, []);\r\n  const hcs = useMemo(() => {\r\n    const service = new HtmlClassService();\r\n\r\n    service.setConfig(lc);\r\n\r\n    return service;\r\n  }, [lc]);\r\n\r\n  return (\r\n    <HtmlClassServiceContext.Provider value={hcs}>\r\n      {children}\r\n    </HtmlClassServiceContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}