{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/Routes.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Layout } from \"../_metronic/layout\";\nimport BasePage from \"./BasePage\";\nimport { Logout, AuthPage } from \"./modules/Auth\";\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\nexport function Routes() {\n  _s();\n\n  const {\n    isAuthorized\n  } = useSelector(({\n    auth\n  }) => ({\n    isAuthorized: auth.user != null\n  }), shallowEqual);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [!isAuthorized ?\n    /*#__PURE__*/\n\n    /*Render auth.*/\n    _jsxDEV(Route, {\n      children: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/error\",\n      component: ErrorsPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/logout\",\n      component: Logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !isAuthorized ?\n    /*#__PURE__*/\n\n    /*Redirect to `/auth`*/\n    _jsxDEV(Redirect, {\n      to: \"/auth/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(BasePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Routes, \"0EdFN2y3OmQs0KwVOxdohynunHc=\", false, function () {\n  return [useSelector];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/Routes.tsx"],"names":["React","Redirect","Switch","Route","shallowEqual","useSelector","Layout","BasePage","Logout","AuthPage","ErrorsPage","Routes","isAuthorized","auth","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,kBAAxC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAmBP,WAAW,CAClC,CAAC;AAAEQ,IAAAA;AAAF,GAAD,MAAe;AACbD,IAAAA,YAAY,EAAEC,IAAI,CAACC,IAAL,IAAa;AADd,GAAf,CADkC,EAIlCV,YAJkC,CAApC;AAOA,sBACE,QAAC,MAAD;AAAA,eACG,CAACQ,YAAD;AAAA;;AACC;AACA,YAAC,KAAD;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFD,GAKG,IANN,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,YATF,EAWG,CAACI,YAAD;AAAA;;AACC;AACA,YAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFD,gBAIC,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA9BeD,M;UACWN,W;;;KADXM,M","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Layout } from \"../_metronic/layout\";\r\nimport BasePage from \"./BasePage\";\r\nimport { Logout, AuthPage } from \"./modules/Auth\";\r\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\r\n\r\nexport function Routes() {\r\n  const { isAuthorized } = useSelector(\r\n    ({ auth }) => ({\r\n      isAuthorized: auth.user != null,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n    <Switch>\r\n      {!isAuthorized ? (\r\n        /*Render auth.*/\r\n        <Route>\r\n          <AuthPage />\r\n        </Route>\r\n      ) : null}\r\n\r\n      <Route path=\"/error\" component={ErrorsPage} />\r\n      <Route path=\"/logout\" component={Logout} />\r\n\r\n      {!isAuthorized ? (\r\n        /*Redirect to `/auth`*/\r\n        <Redirect to=\"/auth/login\" />\r\n      ) : (\r\n        <Layout>\r\n          <BasePage />\r\n        </Layout>\r\n      )}\r\n    </Switch>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}