{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/layout/components/header/header-menu/HeaderMenuWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport objectPath from \"object-path\";\nimport { Link } from \"react-router-dom\";\nimport { toAbsoluteUrl } from \"../../../../_helpers\";\nimport { useHtmlClassService } from \"../../../_core/MetronicLayout\";\nimport { HeaderMenu } from \"./HeaderMenu\";\nexport function HeaderMenuWrapper() {\n  _s();\n\n  const uiService = useHtmlClassService();\n  const layoutProps = useMemo(() => {\n    return {\n      config: uiService.config,\n      ktMenuClasses: uiService.getClasses(\"header_menu\", true),\n      rootArrowEnabled: objectPath.get(uiService.config, \"header.menu.self.root-arrow\"),\n      menuDesktopToggle: objectPath.get(uiService.config, \"header.menu.desktop.toggle\"),\n      headerMenuAttributes: uiService.getAttributes(\"header_menu\"),\n      headerSelfTheme: objectPath.get(uiService.config, \"header.self.theme\"),\n      ulClasses: uiService.getClasses(\"header_menu_nav\", true),\n      disabledAsideSelfDisplay: objectPath.get(uiService.config, \"aside.self.display\") === false\n    };\n  }, [uiService]);\n\n  const getHeaderLogo = () => {\n    let result = \"logo-light.png\";\n\n    if (layoutProps.headerSelfTheme && layoutProps.headerSelfTheme !== \"dark\") {\n      result = \"logo-dark.png\";\n    }\n\n    return toAbsoluteUrl(`/media/logos/${result}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-menu-wrapper header-menu-wrapper-left\",\n      id: \"kt_header_menu_wrapper\",\n      children: [layoutProps.disabledAsideSelfDisplay && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"logo\",\n              src: getHeaderLogo()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(HeaderMenu, {\n        layoutProps: layoutProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(HeaderMenuWrapper, \"yeHSoDu/fyUF59lEQ3jnE0EnvMk=\", false, function () {\n  return [useHtmlClassService];\n});\n\n_c = HeaderMenuWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderMenuWrapper\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/layout/components/header/header-menu/HeaderMenuWrapper.js"],"names":["React","useMemo","objectPath","Link","toAbsoluteUrl","useHtmlClassService","HeaderMenu","HeaderMenuWrapper","uiService","layoutProps","config","ktMenuClasses","getClasses","rootArrowEnabled","get","menuDesktopToggle","headerMenuAttributes","getAttributes","headerSelfTheme","ulClasses","disabledAsideSelfDisplay","getHeaderLogo","result"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,aAAR,QAA4B,sBAA5B;AACA,SAAQC,mBAAR,QAAkC,+BAAlC;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAAA;;AAChC,QAAMC,SAAS,GAAGH,mBAAmB,EAArC;AACA,QAAMI,WAAW,GAAGR,OAAO,CAAC,MAAM;AAC9B,WAAO;AACHS,MAAAA,MAAM,EAAEF,SAAS,CAACE,MADf;AAEHC,MAAAA,aAAa,EAAEH,SAAS,CAACI,UAAV,CAAqB,aAArB,EAAoC,IAApC,CAFZ;AAGHC,MAAAA,gBAAgB,EAAEX,UAAU,CAACY,GAAX,CACdN,SAAS,CAACE,MADI,EAEd,6BAFc,CAHf;AAOHK,MAAAA,iBAAiB,EAAEb,UAAU,CAACY,GAAX,CAAeN,SAAS,CAACE,MAAzB,EAAiC,4BAAjC,CAPhB;AAQHM,MAAAA,oBAAoB,EAAER,SAAS,CAACS,aAAV,CAAwB,aAAxB,CARnB;AASHC,MAAAA,eAAe,EAAEhB,UAAU,CAACY,GAAX,CAAeN,SAAS,CAACE,MAAzB,EAAiC,mBAAjC,CATd;AAUHS,MAAAA,SAAS,EAAEX,SAAS,CAACI,UAAV,CAAqB,iBAArB,EAAwC,IAAxC,CAVR;AAWHQ,MAAAA,wBAAwB,EACpBlB,UAAU,CAACY,GAAX,CAAeN,SAAS,CAACE,MAAzB,EAAiC,oBAAjC,MAA2D;AAZ5D,KAAP;AAcH,GAf0B,EAexB,CAACF,SAAD,CAfwB,CAA3B;;AAgBA,QAAMa,aAAa,GAAG,MAAM;AACxB,QAAIC,MAAM,GAAG,gBAAb;;AACA,QAAIb,WAAW,CAACS,eAAZ,IAA+BT,WAAW,CAACS,eAAZ,KAAgC,MAAnE,EAA2E;AACvEI,MAAAA,MAAM,GAAG,eAAT;AACH;;AACD,WAAOlB,aAAa,CAAE,gBAAekB,MAAO,EAAxB,CAApB;AACH,GAND;;AAQA,sBAAO;AAAA,2BAEH;AAAK,MAAA,SAAS,EAAC,8CAAf;AAA8D,MAAA,EAAE,EAAC,wBAAjE;AAAA,iBACKb,WAAW,CAACW,wBAAZ,iBACG;AAAA,+BAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,mCACI;AAAK,cAAA,GAAG,EAAC,MAAT;AAAgB,cAAA,GAAG,EAAEC,aAAa;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,uBAFR,eAaI,QAAC,UAAD;AAAY,QAAA,WAAW,EAAEZ;AAAzB;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFG,mBAAP;AAoBH;;GA9CeF,iB;UACMF,mB;;;KADNE,iB","sourcesContent":["import React, {useMemo} from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {toAbsoluteUrl} from \"../../../../_helpers\";\r\nimport {useHtmlClassService} from \"../../../_core/MetronicLayout\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\n\r\nexport function HeaderMenuWrapper() {\r\n    const uiService = useHtmlClassService();\r\n    const layoutProps = useMemo(() => {\r\n        return {\r\n            config: uiService.config,\r\n            ktMenuClasses: uiService.getClasses(\"header_menu\", true),\r\n            rootArrowEnabled: objectPath.get(\r\n                uiService.config,\r\n                \"header.menu.self.root-arrow\"\r\n            ),\r\n            menuDesktopToggle: objectPath.get(uiService.config, \"header.menu.desktop.toggle\"),\r\n            headerMenuAttributes: uiService.getAttributes(\"header_menu\"),\r\n            headerSelfTheme: objectPath.get(uiService.config, \"header.self.theme\"),\r\n            ulClasses: uiService.getClasses(\"header_menu_nav\", true),\r\n            disabledAsideSelfDisplay:\r\n                objectPath.get(uiService.config, \"aside.self.display\") === false\r\n        };\r\n    }, [uiService]);\r\n    const getHeaderLogo = () => {\r\n        let result = \"logo-light.png\";\r\n        if (layoutProps.headerSelfTheme && layoutProps.headerSelfTheme !== \"dark\") {\r\n            result = \"logo-dark.png\";\r\n        }\r\n        return toAbsoluteUrl(`/media/logos/${result}`);\r\n    };\r\n\r\n    return <>\r\n        {/*begin::Header Menu Wrapper*/}\r\n        <div className=\"header-menu-wrapper header-menu-wrapper-left\" id=\"kt_header_menu_wrapper\">\r\n            {layoutProps.disabledAsideSelfDisplay && (\r\n                <>\r\n                    {/*begin::Header Logo*/}\r\n                    <div className=\"header-logo\">\r\n                        <Link to=\"/\">\r\n                            <img alt=\"logo\" src={getHeaderLogo()}/>\r\n                        </Link>\r\n                    </div>\r\n                    {/*end::Header Logo*/}\r\n                </>\r\n            )}\r\n            {/*begin::Header Menu*/}\r\n            <HeaderMenu layoutProps={layoutProps} />\r\n            {/*end::Header Menu*/}\r\n        </div>\r\n        {/*Header Menu Wrapper*/}\r\n    </>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}