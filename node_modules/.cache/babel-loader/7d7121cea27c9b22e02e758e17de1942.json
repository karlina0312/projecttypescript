{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\nimport { isEqual, isFunction } from \"lodash\";\nimport { initialFilter } from \"./RemarksUIHelper\";\nconst RemarksUIContext = /*#__PURE__*/createContext();\nexport function useRemarksUIContext() {\n  _s();\n\n  return useContext(RemarksUIContext);\n}\n\n_s(useRemarksUIContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\nexport function RemarksUIProvider({\n  currentProductId,\n  children\n}) {\n  _s2();\n\n  const [productId, setProductId] = useState(currentProductId);\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback(nextQueryParams => {\n    setQueryParamsBase(prevQueryParams => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n  const [selectedId, setSelectedId] = useState(null);\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\n  const initRemark = {\n    id: undefined,\n    text: \"\",\n    type: 0,\n    dueDate: \"01/07/2020\",\n    carId: productId\n  };\n  useEffect(() => {\n    initRemark.productId = currentProductId;\n    initRemark.carId = currentProductId;\n    setProductId(currentProductId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentProductId]);\n\n  const openNewRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowEditRemarkDialog(true);\n  };\n\n  const openEditRemarkDialog = id => {\n    setSelectedId(id);\n    setShowEditRemarkDialog(true);\n  };\n\n  const closeEditRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowEditRemarkDialog(false);\n  };\n\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\n\n  const openDeleteRemarkDialog = id => {\n    setSelectedId(id);\n    setShowDeleteRemarkDialog(true);\n  };\n\n  const closeDeleteRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowDeleteRemarkDialog(false);\n  };\n\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\n\n  const openDeleteRemarksDialog = () => {\n    setShowDeleteRemarksDialog(true);\n  };\n\n  const closeDeleteRemarksDialog = () => {\n    setShowDeleteRemarksDialog(false);\n  };\n\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\n\n  const openFetchRemarksDialog = () => {\n    setShowFetchRemarksDialog(true);\n  };\n\n  const closeFetchRemarksDialog = () => {\n    setShowFetchRemarksDialog(false);\n  };\n\n  const value = {\n    ids,\n    setIds,\n    productId,\n    setProductId,\n    queryParams,\n    setQueryParams,\n    initRemark,\n    selectedId,\n    showEditRemarkDialog,\n    openNewRemarkDialog,\n    openEditRemarkDialog,\n    closeEditRemarkDialog,\n    showDeleteRemarkDialog,\n    openDeleteRemarkDialog,\n    closeDeleteRemarkDialog,\n    showDeleteRemarksDialog,\n    openDeleteRemarksDialog,\n    closeDeleteRemarksDialog,\n    openFetchRemarksDialog,\n    closeFetchRemarksDialog,\n    showFetchRemarksDialog\n  };\n  return /*#__PURE__*/_jsxDEV(RemarksUIContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RemarksUIProvider, \"ZjzsFJ9ZoPeNsHxuIvTegQZJ2QY=\");\n\n_c = RemarksUIProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemarksUIProvider\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.tsx"],"names":["React","useEffect","useContext","createContext","useState","useCallback","isEqual","isFunction","initialFilter","RemarksUIContext","useRemarksUIContext","RemarksUIConsumer","Consumer","RemarksUIProvider","currentProductId","children","productId","setProductId","queryParams","setQueryParamsBase","ids","setIds","setQueryParams","nextQueryParams","prevQueryParams","selectedId","setSelectedId","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","id","undefined","text","type","dueDate","carId","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","showDeleteRemarkDialog","setShowDeleteRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}