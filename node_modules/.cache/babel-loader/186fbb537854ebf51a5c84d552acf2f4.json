{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst selectedProducts = (entities, ids) => {\n  const _products = [];\n  ids.forEach(id => {\n    const product = entities.find(el => el.id === id);\n\n    if (product) {\n      _products.push(product);\n    }\n  });\n  return _products;\n};\n\nexport function ProductsUpdateStatusDialog({\n  show,\n  onHide\n}) {\n  _s();\n\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams\n    };\n  }, [productsUIContext]); // Products Redux state\n\n  const {\n    products,\n    isLoading\n  } = useSelector(state => ({\n    products: selectedProducts(state.products.entities, productsUIProps.ids),\n    isLoading: state.products.actionsLoading\n  }), shallowEqual); // if there weren't selected products we should close modal\n\n  useEffect(() => {\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [productsUIProps.ids]);\n  const [status, setStatus] = useState(0);\n  const dispatch = useDispatch();\n\n  const updateStatus = () => {\n    // server request for updateing product by ids\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\n        // clear selections list\n        productsUIProps.setIds([]); // closing delete modal\n\n        onHide();\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"example-modal-sizes-title-lg\",\n        children: \"\\u0421\\u043E\\u043D\\u0433\\u043E\\u0441\\u043E\\u043D \\u0431\\u04AF\\u0442\\u044D\\u044D\\u0433\\u0434\\u044D\\u0445\\u04AF\\u04AF\\u043D\\u0438\\u0439 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0448\\u0438\\u043D\\u044D\\u0447\\u043B\\u044D\\u0433\\u0434\\u0441\\u044D\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"overlay overlay-block cursor-default\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-layer bg-transparent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner spinner-lg spinner-warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-timeline list-timeline-skin-light padding-30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-timeline-items\",\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-timeline-item mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"list-timeline-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `label label-lg label-light-${ProductStatusCssClasses[product.status]} label-inline`,\n                style: {\n                  width: \"60px\"\n                },\n                children: [\"ID: \", product.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-5\",\n                children: [product.manufacture, \", \", product.model]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: `form-control ${ProductStatusCssClasses[status]}`,\n          value: status,\n          onChange: e => setStatus(+e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"\\u0411\\u043E\\u0440\\u043B\\u0443\\u0443\\u043B\\u0430\\u043B\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"\\u0417\\u0430\\u0440\\u0430\\u0433\\u0434\\u0441\\u0430\\u043D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onHide,\n          className: \"btn btn-light btn-elevate\",\n          children: \"\\u0426\\u0443\\u0446\\u043B\\u0430\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: updateStatus,\n          className: \"btn btn-primary btn-elevate\",\n          children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\\u044B\\u0433 \\u0448\\u0438\\u043D\\u044D\\u0447\\u043B\\u044D\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsUpdateStatusDialog, \"MPj99tQVKdurNH1WZby2nV6x8Zg=\", false, function () {\n  return [useProductsUIContext, useSelector, useDispatch];\n});\n\n_c = ProductsUpdateStatusDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsUpdateStatusDialog\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.tsx"],"names":["React","useEffect","useState","useMemo","Modal","shallowEqual","useDispatch","useSelector","ProductStatusCssClasses","actions","useProductsUIContext","selectedProducts","entities","ids","_products","forEach","id","product","find","el","push","ProductsUpdateStatusDialog","show","onHide","productsUIContext","productsUIProps","setIds","queryParams","products","isLoading","state","actionsLoading","length","status","setStatus","dispatch","updateStatus","updateProductsStatus","then","fetchProducts","map","width","manufacture","model","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n        Сонгосон бүтээгдэхүүний статус шинэчлэгдсэн\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Борлуулалт</option>\r\n            <option value=\"1\">Зарагдсан</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Цуцлах\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Статусыг шинэчлэх\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}