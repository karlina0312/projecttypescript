{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport KTOffcanvas from \"./../../components/offcanvas.js\";\nimport KTMenu from \"./../../components/menu.js\";\nimport { KTUtil } from \"./../../components/util.js\";\n\nvar KTLayoutHeaderMenu = function () {\n  // Private properties\n  var _menuElement;\n\n  var _menuObject;\n\n  var _offcanvasElement;\n\n  var _offcanvasObject; // Private functions\n\n\n  var _init = function () {\n    _offcanvasObject = new KTOffcanvas(_offcanvasElement, {\n      overlay: true,\n      baseClass: 'header-menu-wrapper',\n      closeBy: 'kt_header_menu_mobile_close_btn',\n      toggleBy: {\n        target: 'kt_header_mobile_toggle',\n        state: 'mobile-toggle-active'\n      }\n    });\n    _menuObject = new KTMenu(_menuElement, {\n      submenu: {\n        desktop: 'dropdown',\n        tablet: 'accordion',\n        mobile: 'accordion'\n      },\n      accordion: {\n        slideSpeed: 200,\n        // accordion toggle slide speed in milliseconds\n        expandAll: false // allow having multiple expanded accordions in the menu\n\n      }\n    }); // Close aside offcanvas panel before page reload On tablet and mobile\n\n    _menuObject.on('linkClick', function (menu) {\n      if (KTUtil.isBreakpointDown('lg')) {\n        // Tablet and mobile mode\n        _offcanvasObject.hide(); // Hide offcanvas after general link click\n\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function (menuId, offcanvasId) {\n      _menuElement = KTUtil.getById(menuId);\n      _offcanvasElement = KTUtil.getById(offcanvasId);\n\n      if (!_menuElement) {\n        return;\n      } // Initialize menu\n\n\n      _init();\n    },\n    getMenuElement: function () {\n      return _menuElement;\n    },\n    getOffcanvasElement: function () {\n      return _offcanvasElement;\n    },\n    getMenu: function () {\n      return _menuObject;\n    },\n    pauseDropdownHover: function (time) {\n      if (_menuObject) {\n        _menuObject.pauseDropdownHover(time);\n      }\n    },\n    getOffcanvas: function () {\n      return _offcanvasObject;\n    },\n    closeMobileOffcanvas: function () {\n      if (_menuObject && KTUtil.isMobileDevice()) {\n        _offcanvasObject.hide();\n      }\n    }\n  };\n}(); // Webpack support\n\n\nif (typeof module !== 'undefined') {// module.exports = KTLayoutHeaderMenu;\n}\n\nexport default KTLayoutHeaderMenu;","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/_assets/js/layout/base/header-menu.js"],"names":["KTOffcanvas","KTMenu","KTUtil","KTLayoutHeaderMenu","_menuElement","_menuObject","_offcanvasElement","_offcanvasObject","_init","overlay","baseClass","closeBy","toggleBy","target","state","submenu","desktop","tablet","mobile","accordion","slideSpeed","expandAll","on","menu","isBreakpointDown","hide","init","menuId","offcanvasId","getById","getMenuElement","getOffcanvasElement","getMenu","pauseDropdownHover","time","getOffcanvas","closeMobileOffcanvas","isMobileDevice","module"],"mappings":"AAAA;AACA;;AAEA,OAAOA,WAAP,MAAwB,iCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,MAAT,QAAuB,4BAAvB;;AAEA,IAAIC,kBAAkB,GAAG,YAAW;AAChC;AACH,MAAIC,YAAJ;;AACG,MAAIC,WAAJ;;AACA,MAAIC,iBAAJ;;AACA,MAAIC,gBAAJ,CALgC,CAOhC;;;AACH,MAAIC,KAAK,GAAG,YAAW;AACtBD,IAAAA,gBAAgB,GAAG,IAAIP,WAAJ,CAAgBM,iBAAhB,EAAmC;AACrDG,MAAAA,OAAO,EAAE,IAD4C;AAErDC,MAAAA,SAAS,EAAE,qBAF0C;AAGrDC,MAAAA,OAAO,EAAE,iCAH4C;AAIrDC,MAAAA,QAAQ,EAAE;AACTC,QAAAA,MAAM,EAAE,yBADC;AAETC,QAAAA,KAAK,EAAE;AAFE;AAJ2C,KAAnC,CAAnB;AAUAT,IAAAA,WAAW,GAAG,IAAIJ,MAAJ,CAAWG,YAAX,EAAyB;AACtCW,MAAAA,OAAO,EAAE;AACRC,QAAAA,OAAO,EAAE,UADD;AAERC,QAAAA,MAAM,EAAE,WAFA;AAGRC,QAAAA,MAAM,EAAE;AAHA,OAD6B;AAMtCC,MAAAA,SAAS,EAAE;AACVC,QAAAA,UAAU,EAAE,GADF;AACO;AACjBC,QAAAA,SAAS,EAAE,KAFD,CAEO;;AAFP;AAN2B,KAAzB,CAAd,CAXsB,CAuBtB;;AACMhB,IAAAA,WAAW,CAACiB,EAAZ,CAAe,WAAf,EAA4B,UAASC,IAAT,EAAe;AACvC,UAAIrB,MAAM,CAACsB,gBAAP,CAAwB,IAAxB,CAAJ,EAAmC;AAAE;AACjCjB,QAAAA,gBAAgB,CAACkB,IAAjB,GAD+B,CACN;;AAC5B;AACJ,KAJD;AAKN,GA7BD,CARmC,CAuChC;;;AACH,SAAO;AACAC,IAAAA,IAAI,EAAE,UAASC,MAAT,EAAiBC,WAAjB,EAA8B;AAChCxB,MAAAA,YAAY,GAAGF,MAAM,CAAC2B,OAAP,CAAeF,MAAf,CAAf;AACArB,MAAAA,iBAAiB,GAAGJ,MAAM,CAAC2B,OAAP,CAAeD,WAAf,CAApB;;AAEA,UAAI,CAACxB,YAAL,EAAmB;AACf;AACH,OAN+B,CAQhC;;;AACAI,MAAAA,KAAK;AACd,KAXK;AAaNsB,IAAAA,cAAc,EAAE,YAAW;AAC1B,aAAO1B,YAAP;AACA,KAfK;AAiBA2B,IAAAA,mBAAmB,EAAE,YAAW;AACrC,aAAOzB,iBAAP;AACA,KAnBK;AAqBA0B,IAAAA,OAAO,EAAE,YAAW;AACzB,aAAO3B,WAAP;AACA,KAvBK;AAyBN4B,IAAAA,kBAAkB,EAAE,UAASC,IAAT,EAAe;AAClC,UAAI7B,WAAJ,EAAiB;AAChBA,QAAAA,WAAW,CAAC4B,kBAAZ,CAA+BC,IAA/B;AACA;AACD,KA7BK;AA+BAC,IAAAA,YAAY,EAAE,YAAW;AAC9B,aAAO5B,gBAAP;AACA,KAjCK;AAmCN6B,IAAAA,oBAAoB,EAAE,YAAW;AAChC,UAAI/B,WAAW,IAAIH,MAAM,CAACmC,cAAP,EAAnB,EAA4C;AAC3C9B,QAAAA,gBAAgB,CAACkB,IAAjB;AACA;AACD;AAvCK,GAAP;AAyCA,CAjFwB,EAAzB,C,CAmFA;;;AACA,IAAI,OAAOa,MAAP,KAAkB,WAAtB,EAAmC,CAClC;AACA;;AAED,eAAenC,kBAAf","sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport KTOffcanvas from \"./../../components/offcanvas.js\";\nimport KTMenu from \"./../../components/menu.js\";\nimport { KTUtil } from \"./../../components/util.js\";\r\n\r\nvar KTLayoutHeaderMenu = function() {\r\n    // Private properties\r\n\tvar _menuElement;\r\n    var _menuObject;\r\n    var _offcanvasElement;\r\n    var _offcanvasObject;\r\n\r\n    // Private functions\r\n\tvar _init = function() {\r\n\t\t_offcanvasObject = new KTOffcanvas(_offcanvasElement, {\r\n\t\t\toverlay: true,\r\n\t\t\tbaseClass: 'header-menu-wrapper',\r\n\t\t\tcloseBy: 'kt_header_menu_mobile_close_btn',\r\n\t\t\ttoggleBy: {\r\n\t\t\t\ttarget: 'kt_header_mobile_toggle',\r\n\t\t\t\tstate: 'mobile-toggle-active'\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t_menuObject = new KTMenu(_menuElement, {\r\n\t\t\tsubmenu: {\r\n\t\t\t\tdesktop: 'dropdown',\r\n\t\t\t\ttablet: 'accordion',\r\n\t\t\t\tmobile: 'accordion'\r\n\t\t\t},\r\n\t\t\taccordion: {\r\n\t\t\t\tslideSpeed: 200, // accordion toggle slide speed in milliseconds\r\n\t\t\t\texpandAll: false // allow having multiple expanded accordions in the menu\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Close aside offcanvas panel before page reload On tablet and mobile\r\n        _menuObject.on('linkClick', function(menu) {\r\n            if (KTUtil.isBreakpointDown('lg')) { // Tablet and mobile mode\r\n                _offcanvasObject.hide(); // Hide offcanvas after general link click\r\n            }\r\n        });\r\n\t}\r\n\r\n    // Public methods\r\n\treturn {\r\n        init: function(menuId, offcanvasId) {\r\n            _menuElement = KTUtil.getById(menuId);\r\n            _offcanvasElement = KTUtil.getById(offcanvasId);\r\n\r\n            if (!_menuElement) {\r\n                return;\r\n            }\r\n\r\n            // Initialize menu\r\n            _init();\r\n\t\t},\r\n\r\n\t\tgetMenuElement: function() {\r\n\t\t\treturn _menuElement;\r\n\t\t},\r\n\r\n        getOffcanvasElement: function() {\r\n\t\t\treturn _offcanvasElement;\r\n\t\t},\r\n\r\n        getMenu: function() {\r\n\t\t\treturn _menuObject;\r\n\t\t},\r\n\r\n\t\tpauseDropdownHover: function(time) {\r\n\t\t\tif (_menuObject) {\r\n\t\t\t\t_menuObject.pauseDropdownHover(time);\r\n\t\t\t}\r\n\t\t},\r\n\r\n        getOffcanvas: function() {\r\n\t\t\treturn _offcanvasObject;\r\n\t\t},\r\n\r\n\t\tcloseMobileOffcanvas: function() {\r\n\t\t\tif (_menuObject && KTUtil.isMobileDevice()) {\r\n\t\t\t\t_offcanvasObject.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n\t// module.exports = KTLayoutHeaderMenu;\r\n}\r\n\nexport default KTLayoutHeaderMenu;"]},"metadata":{},"sourceType":"module"}