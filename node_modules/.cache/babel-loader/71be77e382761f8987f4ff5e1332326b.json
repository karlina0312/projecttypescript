{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/layout/_core/MetronicSplashScreen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nconst MetronicSplashScreenContext = /*#__PURE__*/createContext();\nexport function MetronicSplashScreenProvider({\n  children\n}) {\n  _s();\n\n  const [count, setCount] = useState(0);\n  let visible = count > 0;\n  useEffect(() => {\n    const splashScreen = document.getElementById(\"splash-screen\"); // Show SplashScreen\n\n    if (splashScreen && visible) {\n      splashScreen.classList.remove(\"hidden\");\n      return () => {\n        splashScreen.classList.add(\"hidden\");\n      };\n    } // Hide SplashScreen\n\n\n    let timeout;\n\n    if (splashScreen && !visible) {\n      timeout = setTimeout(() => {\n        splashScreen.classList.add(\"hidden\");\n      }, 3000);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [visible]);\n  return /*#__PURE__*/_jsxDEV(MetronicSplashScreenContext.Provider, {\n    value: setCount,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MetronicSplashScreenProvider, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = MetronicSplashScreenProvider;\nexport function LayoutSplashScreen({\n  visible = true\n}) {\n  _s2();\n\n  // Everything are ready - remove splashscreen\n  const setCount = useContext(MetronicSplashScreenContext);\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    setCount(prev => {\n      return prev + 1;\n    });\n    return () => {\n      setCount(prev => {\n        return prev - 1;\n      });\n    };\n  }, [setCount, visible]);\n  return null;\n}\n\n_s2(LayoutSplashScreen, \"7vsTmQ5v/VbQFP1+FvIbjUJDPow=\");\n\n_c2 = LayoutSplashScreen;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MetronicSplashScreenProvider\");\n$RefreshReg$(_c2, \"LayoutSplashScreen\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/layout/_core/MetronicSplashScreen.js"],"names":["React","createContext","useContext","useState","useEffect","MetronicSplashScreenContext","MetronicSplashScreenProvider","children","count","setCount","visible","splashScreen","document","getElementById","classList","remove","add","timeout","setTimeout","clearTimeout","LayoutSplashScreen","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoDC,SAApD,QAAoE,OAApE;AAEA,MAAMC,2BAA2B,gBAAGJ,aAAa,EAAjD;AAEA,OAAO,SAASK,4BAAT,CAAsC;AAAEC,EAAAA;AAAF,CAAtC,EAAoD;AAAA;;AACzD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIO,OAAO,GAAGF,KAAK,GAAG,CAAtB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB,CADc,CAGd;;AACA,QAAIF,YAAY,IAAID,OAApB,EAA6B;AAC3BC,MAAAA,YAAY,CAACG,SAAb,CAAuBC,MAAvB,CAA8B,QAA9B;AAEA,aAAO,MAAM;AACXJ,QAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD,OAFD;AAGD,KAVa,CAYd;;;AACA,QAAIC,OAAJ;;AACA,QAAIN,YAAY,IAAI,CAACD,OAArB,EAA8B;AAC5BO,MAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACzBP,QAAAA,YAAY,CAACG,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD,OAFmB,EAEjB,IAFiB,CAApB;AAGD;;AAED,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACP,OAAD,CAvBM,CAAT;AAyBA,sBACE,QAAC,2BAAD,CAA6B,QAA7B;AAAsC,IAAA,KAAK,EAAED,QAA7C;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlCeD,4B;;KAAAA,4B;AAoChB,OAAO,SAASc,kBAAT,CAA4B;AAAEV,EAAAA,OAAO,GAAG;AAAZ,CAA5B,EAAgD;AAAA;;AACrD;AACA,QAAMD,QAAQ,GAAGP,UAAU,CAACG,2BAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,OAAL,EAAc;AACZ;AACD;;AAEDD,IAAAA,QAAQ,CAACY,IAAI,IAAI;AACf,aAAOA,IAAI,GAAG,CAAd;AACD,KAFO,CAAR;AAIA,WAAO,MAAM;AACXZ,MAAAA,QAAQ,CAACY,IAAI,IAAI;AACf,eAAOA,IAAI,GAAG,CAAd;AACD,OAFO,CAAR;AAGD,KAJD;AAKD,GAdQ,EAcN,CAACZ,QAAD,EAAWC,OAAX,CAdM,CAAT;AAgBA,SAAO,IAAP;AACD;;IArBeU,kB;;MAAAA,kB","sourcesContent":["import React, {createContext, useContext, useState, useEffect} from \"react\";\r\n\r\nconst MetronicSplashScreenContext = createContext();\r\n\r\nexport function MetronicSplashScreenProvider({ children }) {\r\n  const [count, setCount] = useState(0);\r\n  let visible = count > 0;\r\n\r\n  useEffect(() => {\r\n    const splashScreen = document.getElementById(\"splash-screen\");\r\n\r\n    // Show SplashScreen\r\n    if (splashScreen && visible) {\r\n      splashScreen.classList.remove(\"hidden\");\r\n\r\n      return () => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      };\r\n    }\r\n\r\n    // Hide SplashScreen\r\n    let timeout;\r\n    if (splashScreen && !visible) {\r\n      timeout = setTimeout(() => {\r\n        splashScreen.classList.add(\"hidden\");\r\n      }, 3000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [visible]);\r\n\r\n  return (\r\n    <MetronicSplashScreenContext.Provider value={setCount}>\r\n      {children}\r\n    </MetronicSplashScreenContext.Provider>\r\n  );\r\n}\r\n\r\nexport function LayoutSplashScreen({ visible = true }) {\r\n  // Everything are ready - remove splashscreen\r\n  const setCount = useContext(MetronicSplashScreenContext);\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      return;\r\n    }\r\n\r\n    setCount(prev => {\r\n      return prev + 1;\r\n    });\r\n\r\n    return () => {\r\n      setCount(prev => {\r\n        return prev - 1;\r\n      });\r\n    };\r\n  }, [setCount, visible]);\r\n\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}