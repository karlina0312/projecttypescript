{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\nexport function SpecificationEditDialog() {\n  _s();\n\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      id: specsUIContext.selectedId,\n      show: specsUIContext.showEditSpecificationDialog,\n      onHide: specsUIContext.closeEditSpecificationDialog,\n      productId: specsUIContext.productId,\n      queryParams: specsUIContext.queryParams,\n      initSpecification: specsUIContext.initSpecification\n    };\n  }, [specsUIContext]); // Specifications Redux state\n\n  const dispatch = useDispatch();\n  const {\n    actionsLoading,\n    specificationForEdit\n  } = useSelector(state => ({\n    actionsLoading: state.specifications.actionsLoading,\n    specificationForEdit: state.specifications.specificationForEdit\n  }), shallowEqual);\n  useEffect(() => {\n    // server request for getting spec by seleted id\n    dispatch(actions.fetchSpecification(specsUIProps.id));\n  }, [specsUIProps.id, dispatch]);\n\n  const saveSpecification = specification => {\n    if (!specsUIProps.id) {\n      dispatch(actions.createSpecification(specification)).then(() => {\n        dispatch(actions.fetchSpecifications(specsUIProps.queryParams, specsUIProps.productId)).then(() => specsUIProps.onHide());\n      });\n    } else {\n      dispatch(actions.updateSpecification(specification)).then(() => {\n        dispatch(actions.fetchSpecifications(specsUIProps.queryParams, specsUIProps.productId)).then(() => specsUIProps.onHide());\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: specsUIProps.show,\n    onHide: specsUIProps.onHide,\n    \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n    children: [/*#__PURE__*/_jsxDEV(SpecificationEditDialogHeader, {\n      id: specsUIProps.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpecificationEditForm, {\n      saveSpecification: saveSpecification,\n      actionsLoading: actionsLoading,\n      specification: specificationForEdit || specsUIProps.initSpecification,\n      onHide: specsUIProps.onHide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpecificationEditDialog, \"IR3cSjYkKhaOsyXF0Fk5Dc7/u7g=\", false, function () {\n  return [useSpecificationsUIContext, useDispatch, useSelector];\n});\n\n_c = SpecificationEditDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificationEditDialog\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.tsx"],"names":["React","useEffect","useMemo","Modal","shallowEqual","useDispatch","useSelector","actions","SpecificationEditDialogHeader","SpecificationEditForm","useSpecificationsUIContext","SpecificationEditDialog","specsUIContext","specsUIProps","id","selectedId","show","showEditSpecificationDialog","onHide","closeEditSpecificationDialog","productId","queryParams","initSpecification","dispatch","actionsLoading","specificationForEdit","state","specifications","fetchSpecification","saveSpecification","specification","createSpecification","then","fetchSpecifications","updateSpecification"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\r\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\r\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\r\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\r\n\r\nexport function SpecificationEditDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      show: specsUIContext.showEditSpecificationDialog,\r\n      onHide: specsUIContext.closeEditSpecificationDialog,\r\n      productId: specsUIContext.productId,\r\n      queryParams: specsUIContext.queryParams,\r\n      initSpecification: specsUIContext.initSpecification,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specifications Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, specificationForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.specifications.actionsLoading,\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting spec by seleted id\r\n    dispatch(actions.fetchSpecification(specsUIProps.id));\r\n  }, [specsUIProps.id, dispatch]);\r\n\r\n  const saveSpecification = (specification) => {\r\n    if (!specsUIProps.id) {\r\n      dispatch(actions.createSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    } else {\r\n      dispatch(actions.updateSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\r\n      <SpecificationEditForm\r\n        saveSpecification={saveSpecification}\r\n        actionsLoading={actionsLoading}\r\n        specification={specificationForEdit || specsUIProps.initSpecification}\r\n        onHide={specsUIProps.onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}