{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/app/modules/UserProfile/ChangePassword.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport SVG from \"react-inlinesvg\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\nimport * as auth from \"../Auth\";\n\nfunction ChangePassword(props) {\n  _s();\n\n  // Fields\n  const [loading, setloading] = useState(false);\n  const [isError, setisError] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user, shallowEqual);\n  useEffect(() => {}, [user]); // Methods\n\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    setisError(false);\n    const updatedUser = Object.assign(user, {\n      password: values.password\n    }); // user for update preparation\n\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      setisError(true); // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  }; // UI Helpers\n\n\n  const initialValues = {\n    currentPassword: \"\",\n    password: \"\",\n    cPassword: \"\"\n  };\n  const Schema = Yup.object().shape({\n    currentPassword: Yup.string().required(\"Current password is required\"),\n    password: Yup.string().required(\"New Password is required\"),\n    cPassword: Yup.string().required(\"Password confirmation is required\").when(\"password\", {\n      is: val => val && val.length > 0 ? true : false,\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Password and Confirm Password didn't match\")\n    })\n  });\n\n  const getInputClasses = fieldname => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, {\n      setStatus,\n      setSubmitting\n    }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, {\n      resetForm\n    }) => {\n      resetForm();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"card card-custom\",\n    onSubmit: formik.handleSubmit,\n    children: [loading && /*#__PURE__*/_jsxDEV(ModalProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title align-items-start flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-label font-weight-bolder text-dark\",\n          children: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433 \\u0448\\u0438\\u043D\\u044D\\u0447\\u043B\\u044D\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted font-weight-bold font-size-sm mt-1\",\n          children: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433 \\u0441\\u043E\\u043B\\u0438\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success mr-2\",\n          disabled: formik.isSubmitting || formik.touched && !formik.isValid,\n          children: [\"\\u0445\\u0430\\u0434\\u0433\\u0430\\u043B\\u0430\\u0445\", formik.isSubmitting]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user-profile/profile-overview\",\n          className: \"btn btn-secondary\",\n          children: \"\\u0426\\u0443\\u0446\\u043B\\u0430\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [isError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-custom alert-light-danger fade show mb-10\",\n          role: \"alert\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"svg-icon svg-icon-3x svg-icon-danger\",\n              children: [/*#__PURE__*/_jsxDEV(SVG, {\n                src: toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-text font-weight-bold\",\n            children: [\"Configure user passwords to expire periodically. Users will need warning that their passwords are going to expire,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), \"or they might inadvertently get locked out of the system!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-close\",\n            onClick: () => setisError(false),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"alert\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"ki ki-close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"col-xl-3 col-lg-3 col-form-label text-alert\",\n            children: \"\\u041E\\u0434\\u043E\\u043E\\u0433\\u044B\\u043D \\u043D\\u0443\\u0443\\u0446 \\u04AF\\u0433\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9 col-xl-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"\\u041E\\u0434\\u043E\\u043E\\u0433\\u044B\\u043D \\u043D\\u0443\\u0443\\u0446 \\u04AF\\u0433\",\n              className: `form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\"currentPassword\")}`,\n              name: \"currentPassword\",\n              ...formik.getFieldProps(\"currentPassword\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), formik.touched.currentPassword && formik.errors.currentPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: formik.errors.currentPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"text-sm font-weight-bold\",\n              children: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433 \\u043C\\u0430\\u0440\\u0442\\u0441\\u0430\\u043D ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"col-xl-3 col-lg-3 col-form-label text-alert\",\n            children: \"\\u0428\\u0438\\u043D\\u044D \\u043D\\u0443\\u0443\\u0446 \\u04AF\\u0433\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9 col-xl-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"\\u0428\\u0438\\u043D\\u044D \\u043D\\u0443\\u0443\\u0446 \\u04AF\\u0433\",\n              className: `form-control form-control-lg form-control-solid ${getInputClasses(\"password\")}`,\n              name: \"password\",\n              ...formik.getFieldProps(\"password\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: formik.errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"col-xl-3 col-lg-3 col-form-label text-alert\",\n            children: \"\\u041D\\u0443\\u0443\\u0446 \\u04AF\\u0433 \\u0431\\u0430\\u0442\\u0430\\u043B\\u0433\\u0430\\u0430\\u0436\\u0443\\u0443\\u043B\\u0430\\u0445\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9 col-xl-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Verify Password\",\n              className: `form-control form-control-lg form-control-solid ${getInputClasses(\"cPassword\")}`,\n              name: \"cPassword\",\n              ...formik.getFieldProps(\"cPassword\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), formik.touched.cPassword && formik.errors.cPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: formik.errors.cPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"Ru1OHoXD8AY/Nf6gmQu8l38VTHg=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n\n_c = ChangePassword;\nexport default connect(null, auth.actions)(ChangePassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/UserProfile/ChangePassword.tsx"],"names":["React","useState","useEffect","Link","useSelector","shallowEqual","connect","useDispatch","useFormik","Yup","SVG","ModalProgressBar","toAbsoluteUrl","auth","ChangePassword","props","loading","setloading","isError","setisError","dispatch","user","state","saveUser","values","setStatus","setSubmitting","updatedUser","Object","assign","password","setUser","setTimeout","initialValues","currentPassword","cPassword","Schema","object","shape","string","required","when","is","val","length","then","oneOf","ref","getInputClasses","fieldname","formik","touched","errors","validationSchema","onSubmit","onReset","resetForm","handleSubmit","isSubmitting","isValid","getFieldProps","actions"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport * as auth from \"../Auth\";\r\n\r\nfunction ChangePassword(props) {\r\n  // Fields\r\n  const [loading, setloading] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.auth.user, shallowEqual);\r\n  useEffect(() => {}, [user]);\r\n  // Methods\r\n  const saveUser = (values, setStatus, setSubmitting) => {\r\n    setloading(true);\r\n    setisError(false);\r\n    const updatedUser = Object.assign(user, {\r\n      password: values.password,\r\n    });\r\n    // user for update preparation\r\n    dispatch(props.setUser(updatedUser));\r\n    setTimeout(() => {\r\n      setloading(false);\r\n      setSubmitting(false);\r\n      setisError(true);\r\n      // Do request to your server for user update, we just imitate user update there, For example:\r\n      // update(updatedUser)\r\n      //  .then(()) => {\r\n      //    setloading(false);\r\n      //  })\r\n      //  .catch((error) => {\r\n      //    setloading(false);\r\n      //    setSubmitting(false);\r\n      //    setStatus(error);\r\n      // });\r\n    }, 1000);\r\n  };\r\n  // UI Helpers\r\n  const initialValues = {\r\n    currentPassword: \"\",\r\n    password: \"\",\r\n    cPassword: \"\",\r\n  };\r\n  const Schema = Yup.object().shape({\r\n    currentPassword: Yup.string().required(\"Current password is required\"),\r\n    password: Yup.string().required(\"New Password is required\"),\r\n    cPassword: Yup.string()\r\n      .required(\"Password confirmation is required\")\r\n      .when(\"password\", {\r\n        is: (val) => (val && val.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Password and Confirm Password didn't match\"\r\n        ),\r\n      }),\r\n  });\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      saveUser(values, setStatus, setSubmitting);\r\n    },\r\n    onReset: (values, { resetForm }) => {\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\r\n      {loading && <ModalProgressBar />}\r\n\r\n      {/* begin::Header */}\r\n      <div className=\"card-header py-3\">\r\n        <div className=\"card-title align-items-start flex-column\">\r\n          <h3 className=\"card-label font-weight-bolder text-dark\">\r\n            Нууц үг шинэчлэх\r\n          </h3>\r\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\r\n            Нууц үг солих\r\n          </span>\r\n        </div>\r\n        <div className=\"card-toolbar\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success mr-2\"\r\n            disabled={\r\n              formik.isSubmitting || (formik.touched && !formik.isValid)\r\n            }\r\n          >\r\n            хадгалах\r\n            {formik.isSubmitting}\r\n          </button>\r\n          <Link\r\n            to=\"/user-profile/profile-overview\"\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Цуцлах\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Form */}\r\n      <div className=\"form\">\r\n        <div className=\"card-body\">\r\n          {/* begin::Alert */}\r\n          {isError && (\r\n            <div\r\n              className=\"alert alert-custom alert-light-danger fade show mb-10\"\r\n              role=\"alert\"\r\n            >\r\n              <div className=\"alert-icon\">\r\n                <span className=\"svg-icon svg-icon-3x svg-icon-danger\">\r\n                  <SVG\r\n                    src={toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")}\r\n                  ></SVG>{\" \"}\r\n                </span>\r\n              </div>\r\n              <div className=\"alert-text font-weight-bold\">\r\n                Configure user passwords to expire periodically. Users will need\r\n                warning that their passwords are going to expire,\r\n                <br />\r\n                or they might inadvertently get locked out of the system!\r\n              </div>\r\n              <div className=\"alert-close\" onClick={() => setisError(false)}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">\r\n                    <i className=\"ki ki-close\"></i>\r\n                  </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* end::Alert */}\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Одоогын нууц үг\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Одоогын нууц үг\"\r\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\r\n                  \"currentPassword\"\r\n                )}`}\r\n                name=\"currentPassword\"\r\n                {...formik.getFieldProps(\"currentPassword\")}\r\n              />\r\n              {formik.touched.currentPassword &&\r\n              formik.errors.currentPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.currentPassword}\r\n                </div>\r\n              ) : null}\r\n              <a href=\"#\" className=\"text-sm font-weight-bold\">\r\n                Нууц үг мартсан ?\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Шинэ нууц үг\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Шинэ нууц үг\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"password\"\r\n                )}`}\r\n                name=\"password\"\r\n                {...formik.getFieldProps(\"password\")}\r\n              />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\r\n              Нууц үг баталгаажуулах\r\n            </label>\r\n            <div className=\"col-lg-9 col-xl-6\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Verify Password\"\r\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\r\n                  \"cPassword\"\r\n                )}`}\r\n                name=\"cPassword\"\r\n                {...formik.getFieldProps(\"cPassword\")}\r\n              />\r\n              {formik.touched.cPassword && formik.errors.cPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.cPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Form */}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, auth.actions)(ChangePassword);\r\n"]},"metadata":{},"sourceType":"module"}