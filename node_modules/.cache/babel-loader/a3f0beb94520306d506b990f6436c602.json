{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/_helpers/TablePaginationHelpers.js\";\n\n/* Pagination Helprs */\nimport React from \"react\";\nexport const getPagesCount = (totalSize, sizePerPage) => {\n  return Math.ceil(totalSize / sizePerPage);\n};\nexport const getPages = (page, pagesCount, paginationSize) => {\n  const result = [];\n\n  if (!page) {\n    return result;\n  }\n\n  if (pagesCount === 1) {\n    result.push(1);\n    return result;\n  }\n\n  if (pagesCount < page) {\n    return result;\n  }\n\n  if (pagesCount < paginationSize + 1) {\n    for (let i = 1; i < pagesCount + 1; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n\n  if (page === 1) {\n    for (let i = 1; i < paginationSize + 1; i++) {\n      if (i < pagesCount) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  }\n\n  if (page === pagesCount) {\n    for (let i = pagesCount - paginationSize + 1; i <= pagesCount; i++) {\n      if (i <= pagesCount) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  }\n\n  const shiftCount = Math.floor(paginationSize / 2);\n\n  if (shiftCount < 1) {\n    result.push(page);\n    return result;\n  } //\n\n\n  if (page < shiftCount + 2) {\n    for (let i = 1; i < paginationSize + 1; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n\n  if (pagesCount - page < shiftCount + 2) {\n    for (let i = pagesCount - paginationSize; i < pagesCount + 1; i++) {\n      result.push(i);\n    }\n\n    return result;\n  }\n\n  for (let i = page - shiftCount; i < page; i++) {\n    if (i > 0) {\n      result.push(i);\n    }\n  }\n\n  result.push(page);\n\n  for (let i = page + 1; i < page + shiftCount + 1; i++) {\n    if (i <= pagesCount) {\n      result.push(i);\n    }\n  }\n\n  return result;\n};\nexport function getHandlerTableChange(setQueryParams) {\n  return (type, {\n    page,\n    sizePerPage,\n    sortField,\n    sortOrder,\n    data\n  }) => {\n    const pageNumber = page || 1;\n    setQueryParams(prev => type === \"sort\" ? { ...prev,\n      sortOrder,\n      sortField\n    } : type === \"pagination\" ? { ...prev,\n      pageNumber,\n      pageSize: sizePerPage\n    } : prev);\n  };\n}\nexport function PleaseWaitMessage({\n  entities\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: entities === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 34\n    }, this)\n  }, void 0, false);\n}\n_c = PleaseWaitMessage;\nexport function NoRecordsFoundMessage({\n  entities\n}) {\n  const customersList = entities === null ? [] : entities;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: customersList.length === 0 && entities !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No records found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c2 = NoRecordsFoundMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PleaseWaitMessage\");\n$RefreshReg$(_c2, \"NoRecordsFoundMessage\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/_helpers/TablePaginationHelpers.js"],"names":["React","getPagesCount","totalSize","sizePerPage","Math","ceil","getPages","page","pagesCount","paginationSize","result","push","i","shiftCount","floor","getHandlerTableChange","setQueryParams","type","sortField","sortOrder","data","pageNumber","prev","pageSize","PleaseWaitMessage","entities","NoRecordsFoundMessage","customersList","length"],"mappings":"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","sourcesContent":["/* Pagination Helprs */\r\nimport React from \"react\";\r\n\r\nexport const getPagesCount = (totalSize, sizePerPage) => {\r\n  return Math.ceil(totalSize / sizePerPage);\r\n};\r\n\r\nexport const getPages = (page, pagesCount, paginationSize) => {\r\n  const result = [];\r\n  if (!page) {\r\n    return result;\r\n  }\r\n\r\n  if (pagesCount === 1) {\r\n    result.push(1);\r\n    return result;\r\n  }\r\n\r\n  if (pagesCount < page) {\r\n    return result;\r\n  }\r\n\r\n  if (pagesCount < paginationSize + 1) {\r\n    for (let i = 1; i < pagesCount + 1; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  if (page === 1) {\r\n    for (let i = 1; i < paginationSize + 1; i++) {\r\n      if (i < pagesCount) {\r\n        result.push(i);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  if (page === pagesCount) {\r\n    for (let i = pagesCount - paginationSize + 1; i <= pagesCount; i++) {\r\n      if (i <= pagesCount) {\r\n        result.push(i);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const shiftCount = Math.floor(paginationSize / 2);\r\n  if (shiftCount < 1) {\r\n    result.push(page);\r\n    return result;\r\n  }\r\n\r\n  //\r\n  if (page < shiftCount + 2) {\r\n    for (let i = 1; i < paginationSize + 1; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  if (pagesCount - page < shiftCount + 2) {\r\n    for (let i = pagesCount - paginationSize; i < pagesCount + 1; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  for (let i = page - shiftCount; i < page; i++) {\r\n    if (i > 0) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  result.push(page);\r\n  for (let i = page + 1; i < page + shiftCount + 1; i++) {\r\n    if (i <= pagesCount) {\r\n      result.push(i);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport function getHandlerTableChange(setQueryParams) {\r\n  return (type, { page, sizePerPage, sortField, sortOrder, data }) => {\r\n    const pageNumber = page || 1;\r\n    setQueryParams((prev) =>\r\n      type === \"sort\"\r\n        ? { ...prev, sortOrder, sortField }\r\n        : type === \"pagination\"\r\n        ? { ...prev, pageNumber, pageSize: sizePerPage }\r\n        : prev\r\n    );\r\n  };\r\n}\r\n\r\nexport function PleaseWaitMessage({ entities }) {\r\n  return <>{entities === null && <div>Please wait...</div>}</>;\r\n}\r\n\r\nexport function NoRecordsFoundMessage({ entities }) {\r\n  const customersList = entities === null ? [] : entities;\r\n  return (\r\n    <>\r\n      {customersList.length === 0 && entities !== null && (\r\n        <div>No records found</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}