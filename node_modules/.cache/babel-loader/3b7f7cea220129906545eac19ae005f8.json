{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/khatnaa/Desktop/project/src/_metronic/_partials/widgets/stats/StatsWidget10.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React, { useMemo, useEffect } from \"react\";\nimport objectPath from \"object-path\";\nimport ApexCharts from \"apexcharts\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../_helpers\";\nimport { useHtmlClassService } from \"../../../layout\";\nimport { KTUtil } from \"../../../_assets/js/components/util\";\nexport function StatsWidget10({\n  className,\n  symbolShape,\n  baseColor\n}) {\n  _s();\n\n  const uiService = useHtmlClassService();\n  const layoutProps = useMemo(() => {\n    return {\n      colorsGrayGray500: objectPath.get(uiService.config, \"js.colors.gray.gray500\"),\n      colorsGrayGray200: objectPath.get(uiService.config, \"js.colors.gray.gray200\"),\n      colorsGrayGray300: objectPath.get(uiService.config, \"js.colors.gray.gray300\"),\n      colorsThemeBaseSuccess: objectPath.get(uiService.config, `js.colors.theme.base.${baseColor}`),\n      colorsThemeLightSuccess: objectPath.get(uiService.config, `js.colors.theme.light.${baseColor}`),\n      fontFamily: objectPath.get(uiService.config, \"js.fontFamily\")\n    };\n  }, [uiService, baseColor]);\n  useEffect(() => {\n    const element = document.getElementById(\"kt_stats_widget_10_chart\");\n\n    if (!element) {\n      return;\n    }\n\n    const height = parseInt(KTUtil.css(element, \"height\"));\n    const options = getChartOption(layoutProps, height);\n    const chart = new ApexCharts(element, options);\n    chart.render();\n    return function cleanUp() {\n      chart.destroy();\n    };\n  }, [layoutProps]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card card-custom ${className}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center justify-content-between card-spacer flex-grow-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `symbol ${symbolShape} symbol-50 symbol-light${baseColor} mr-2`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"symbol-label\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `svg-icon svg-icon-xl svg-icon-${baseColor}`,\n                children: /*#__PURE__*/_jsxDEV(SVG, {\n                  src: toAbsoluteUrl(\"/media/svg/icons/Shopping/Cart3.svg\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-dark-75 font-weight-bolder font-size-h3\",\n              children: \"+259\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-muted font-weight-bold mt-2\",\n              children: \"Sales Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"kt_stats_widget_10_chart\",\n          className: \"card-rounded-bottom\",\n          \"data-color\": baseColor,\n          style: {\n            height: \"150px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(StatsWidget10, \"jTe7T+RSA9ZzPDP2UWobYnwwEeM=\", false, function () {\n  return [useHtmlClassService];\n});\n\n_c = StatsWidget10;\n\nfunction getChartOption(layoutProps, height) {\n  const options = {\n    series: [{\n      name: \"Net Profit\",\n      data: [40, 40, 30, 30, 35, 35, 50]\n    }],\n    chart: {\n      type: \"area\",\n      height: height,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: \"solid\",\n      opacity: 1\n    },\n    stroke: {\n      curve: \"smooth\",\n      show: true,\n      width: 3,\n      colors: [layoutProps.colorsThemeBaseSuccess]\n    },\n    xaxis: {\n      categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: layoutProps.colorsGrayGray500,\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: \"front\",\n        stroke: {\n          color: layoutProps.colorsGrayGray300,\n          width: 1,\n          dashArray: 3\n        }\n      },\n      tooltip: {\n        enabled: true,\n        formatter: undefined,\n        offsetY: 0,\n        style: {\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 55,\n      labels: {\n        show: false,\n        style: {\n          colors: layoutProps.colorsGrayGray500,\n          fontSize: \"12px\",\n          fontFamily: layoutProps.fontFamily\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: \"none\",\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: \"12px\",\n        fontFamily: layoutProps.fontFamily\n      },\n      y: {\n        formatter: function (val) {\n          return \"$\" + val + \" thousands\";\n        }\n      }\n    },\n    colors: [layoutProps.colorsThemeLightSuccess],\n    markers: {\n      colors: [layoutProps.colorsThemeLightSuccess],\n      strokeColor: [layoutProps.colorsThemeBaseSuccess],\n      strokeWidth: 3\n    }\n  };\n  return options;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsWidget10\");","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/_metronic/_partials/widgets/stats/StatsWidget10.js"],"names":["React","useMemo","useEffect","objectPath","ApexCharts","SVG","toAbsoluteUrl","useHtmlClassService","KTUtil","StatsWidget10","className","symbolShape","baseColor","uiService","layoutProps","colorsGrayGray500","get","config","colorsGrayGray200","colorsGrayGray300","colorsThemeBaseSuccess","colorsThemeLightSuccess","fontFamily","element","document","getElementById","height","parseInt","css","options","getChartOption","chart","render","cleanUp","destroy","series","name","data","type","toolbar","show","zoom","enabled","sparkline","plotOptions","legend","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","color","dashArray","tooltip","formatter","undefined","offsetY","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","markers","strokeColor","strokeWidth"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React, { useMemo, useEffect } from \"react\";\r\nimport objectPath from \"object-path\";\r\nimport ApexCharts from \"apexcharts\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_helpers\";\r\nimport { useHtmlClassService } from \"../../../layout\";\r\nimport { KTUtil } from \"../../../_assets/js/components/util\";\r\n\r\nexport function StatsWidget10({ className, symbolShape, baseColor }) {\r\n  const uiService = useHtmlClassService();\r\n  const layoutProps = useMemo(() => {\r\n    return {\r\n      colorsGrayGray500: objectPath.get(\r\n        uiService.config,\r\n        \"js.colors.gray.gray500\"\r\n      ),\r\n      colorsGrayGray200: objectPath.get(\r\n        uiService.config,\r\n        \"js.colors.gray.gray200\"\r\n      ),\r\n      colorsGrayGray300: objectPath.get(\r\n        uiService.config,\r\n        \"js.colors.gray.gray300\"\r\n      ),\r\n      colorsThemeBaseSuccess: objectPath.get(\r\n        uiService.config,\r\n        `js.colors.theme.base.${baseColor}`\r\n      ),\r\n      colorsThemeLightSuccess: objectPath.get(\r\n        uiService.config,\r\n        `js.colors.theme.light.${baseColor}`\r\n      ),\r\n      fontFamily: objectPath.get(uiService.config, \"js.fontFamily\"),\r\n    };\r\n  }, [uiService, baseColor]);\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(\"kt_stats_widget_10_chart\");\r\n\r\n    if (!element) {\r\n      return;\r\n    }\r\n\r\n    const height = parseInt(KTUtil.css(element, \"height\"));\r\n    const options = getChartOption(layoutProps, height);\r\n    const chart = new ApexCharts(element, options);\r\n    chart.render();\r\n    return function cleanUp() {\r\n      chart.destroy();\r\n    };\r\n  }, [layoutProps]);\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Stats Widget 10 */}\r\n      <div className={`card card-custom ${className}`}>\r\n        {/* begin::Body */}\r\n        <div className=\"card-body p-0\">\r\n          <div className=\"d-flex align-items-center justify-content-between card-spacer flex-grow-1\">\r\n            <span\r\n              className={`symbol ${symbolShape} symbol-50 symbol-light${baseColor} mr-2`}\r\n            >\r\n              <span className=\"symbol-label\">\r\n                <span className={`svg-icon svg-icon-xl svg-icon-${baseColor}`}>\r\n                  <SVG\r\n                    src={toAbsoluteUrl(\"/media/svg/icons/Shopping/Cart3.svg\")}\r\n                  ></SVG>\r\n                </span>\r\n              </span>\r\n            </span>\r\n            <div className=\"d-flex flex-column text-right\">\r\n              <span className=\"text-dark-75 font-weight-bolder font-size-h3\">\r\n                +259\r\n              </span>\r\n              <span className=\"text-muted font-weight-bold mt-2\">Sales Change</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"kt_stats_widget_10_chart\"\r\n            className=\"card-rounded-bottom\"\r\n            data-color={baseColor}\r\n            style={{ height: \"150px\" }}\r\n          />\r\n        </div>\r\n        {/* end::Body */}\r\n      </div>\r\n      {/* end::Stats Widget 10 */}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getChartOption(layoutProps, height) {\r\n  const options = {\r\n    series: [\r\n      {\r\n        name: \"Net Profit\",\r\n        data: [40, 40, 30, 30, 35, 35, 50],\r\n      },\r\n    ],\r\n    chart: {\r\n      type: \"area\",\r\n      height: height,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {},\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: \"solid\",\r\n      opacity: 1,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n      show: true,\r\n      width: 3,\r\n      colors: [layoutProps.colorsThemeBaseSuccess],\r\n    },\r\n    xaxis: {\r\n      categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: layoutProps.colorsGrayGray500,\r\n          fontSize: \"12px\",\r\n          fontFamily: layoutProps.fontFamily,\r\n        },\r\n      },\r\n      crosshairs: {\r\n        show: false,\r\n        position: \"front\",\r\n        stroke: {\r\n          color: layoutProps.colorsGrayGray300,\r\n          width: 1,\r\n          dashArray: 3,\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        formatter: undefined,\r\n        offsetY: 0,\r\n        style: {\r\n          fontSize: \"12px\",\r\n          fontFamily: layoutProps.fontFamily,\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: 0,\r\n      max: 55,\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: layoutProps.colorsGrayGray500,\r\n          fontSize: \"12px\",\r\n          fontFamily: layoutProps.fontFamily,\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: \"none\",\r\n          value: 0,\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: \"none\",\r\n          value: 0,\r\n        },\r\n      },\r\n      active: {\r\n        allowMultipleDataPointsSelection: false,\r\n        filter: {\r\n          type: \"none\",\r\n          value: 0,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: layoutProps.fontFamily,\r\n      },\r\n      y: {\r\n        formatter: function(val) {\r\n          return \"$\" + val + \" thousands\";\r\n        },\r\n      },\r\n    },\r\n    colors: [layoutProps.colorsThemeLightSuccess],\r\n    markers: {\r\n      colors: [layoutProps.colorsThemeLightSuccess],\r\n      strokeColor: [layoutProps.colorsThemeBaseSuccess],\r\n      strokeWidth: 3,\r\n    },\r\n  };\r\n  return options;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}