{"ast":null,"code":"import { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { put, takeLatest } from \"redux-saga/effects\";\nimport { getUserByToken } from \"./authCrud\";\nexport const actionTypes = {\n  Login: \"[Login] Action\",\n  Logout: \"[Logout] Action\",\n  Register: \"[Register] Action\",\n  UserRequested: \"[Request User] Action\",\n  UserLoaded: \"[Load User] Auth API\",\n  SetUser: \"[Set User] Action\"\n};\nconst initialAuthState = {\n  user: undefined,\n  authToken: undefined\n};\nexport const reducer = persistReducer({\n  storage,\n  key: \"v713-demo1-auth\",\n  whitelist: [\"user\", \"authToken\"]\n}, (state = initialAuthState, action) => {\n  switch (action.type) {\n    case actionTypes.Login:\n      {\n        console.log('action' + action.type); // const { authToken } = action.payload;\n\n        const {\n          authToken\n        } = action.type;\n        return {\n          authToken,\n          user: undefined\n        };\n      }\n\n    case actionTypes.Register:\n      {\n        console.log('action' + action.type); // const { authToken } = action.payload;\n\n        const {\n          authToken\n        } = action.type;\n        return {\n          authToken,\n          user: undefined\n        };\n      }\n\n    case actionTypes.Logout:\n      {\n        // TODO: Change this code. Actions in reducer aren't allowed.\n        return initialAuthState;\n      }\n\n    case actionTypes.UserLoaded:\n      {\n        const {\n          user\n        } = action.payload;\n        return { ...state,\n          user\n        };\n      }\n\n    case actionTypes.SetUser:\n      {\n        const {\n          user\n        } = action.payload;\n        return { ...state,\n          user\n        };\n      }\n\n    default:\n      return state;\n  }\n});\nexport const actions = {\n  login: authToken => ({\n    type: actionTypes.Login,\n    payload: {\n      authToken\n    }\n  }),\n  register: authToken => ({\n    type: actionTypes.Register,\n    payload: {\n      authToken\n    }\n  }),\n  logout: () => ({\n    type: actionTypes.Logout\n  }),\n  requestUser: user => ({\n    type: actionTypes.UserRequested,\n    payload: {\n      user\n    }\n  }),\n  fulfillUser: user => ({\n    type: actionTypes.UserLoaded,\n    payload: {\n      user\n    }\n  }),\n  setUser: user => ({\n    type: actionTypes.SetUser,\n    payload: {\n      user\n    }\n  })\n};\nexport function* saga() {\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\n    yield put(actions.requestUser());\n  });\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\n    yield put(actions.requestUser());\n  });\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\n    const {\n      data: user\n    } = yield getUserByToken();\n    yield put(actions.fulfillUser(user));\n  });\n}","map":{"version":3,"sources":["/home/khatnaa/Desktop/project/src/app/modules/Auth/_redux/authRedux.tsx"],"names":["persistReducer","storage","put","takeLatest","getUserByToken","actionTypes","Login","Logout","Register","UserRequested","UserLoaded","SetUser","initialAuthState","user","undefined","authToken","reducer","key","whitelist","state","action","type","console","log","payload","actions","login","register","logout","requestUser","fulfillUser","setUser","saga","loginSaga","registerSaga","userRequested","data"],"mappings":"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","sourcesContent":["import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserByToken } from \"./authCrud\";\r\n\r\nexport const actionTypes = {\r\n  Login: \"[Login] Action\",\r\n  Logout: \"[Logout] Action\",\r\n  Register: \"[Register] Action\",\r\n  UserRequested: \"[Request User] Action\",\r\n  UserLoaded: \"[Load User] Auth API\",\r\n  SetUser: \"[Set User] Action\",\r\n};\r\n\r\nconst initialAuthState = {\r\n  user: undefined,\r\n  authToken: undefined,\r\n};\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: \"v713-demo1-auth\", whitelist: [\"user\", \"authToken\"] },\r\n  (state = initialAuthState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        console.log('action' + action.type);\r\n        // const { authToken } = action.payload;\r\n        const {authToken}=action.type;\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        console.log('action' + action.type);\r\n        // const { authToken } = action.payload;\r\n        const {authToken}=action.type;\r\n        return { authToken, user: undefined };\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        // TODO: Change this code. Actions in reducer aren't allowed.\r\n        return initialAuthState;\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      case actionTypes.SetUser: {\r\n        const { user } = action.payload;\r\n        return { ...state, user };\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n);\r\n\r\nexport const actions = {\r\n  login: (authToken) => ({ type: actionTypes.Login, payload: { authToken } }),\r\n  register: (authToken) => ({\r\n    type: actionTypes.Register,\r\n    payload: { authToken },\r\n  }),\r\n  logout: () => ({ type: actionTypes.Logout }),\r\n  requestUser: (user) => ({\r\n    type: actionTypes.UserRequested,\r\n    payload: { user },\r\n  }),\r\n  fulfillUser: (user) => ({ type: actionTypes.UserLoaded, payload: { user } }),\r\n  setUser: (user) => ({ type: actionTypes.SetUser, payload: { user } }),\r\n};\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\r\n    yield put(actions.requestUser());\r\n  });\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    const { data: user } = yield getUserByToken();\r\n\r\n    yield put(actions.fulfillUser(user));\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}